globalThis.process ??= {}; globalThis.process.env ??= {};
import { d as createVNode, F as Fragment, _ as __astro_tag_component__ } from './astro/server_BfFDGVc7.mjs';

const frontmatter = {
  "title": "GitHub",
  "description": "Use opencode in GitHub issues and pull-requests."
};
function getHeadings() {
  return [{
    "depth": 2,
    "slug": "features",
    "text": "Features"
  }, {
    "depth": 2,
    "slug": "installation",
    "text": "Installation"
  }, {
    "depth": 3,
    "slug": "manual-setup",
    "text": "Manual Setup"
  }, {
    "depth": 2,
    "slug": "configuration",
    "text": "Configuration"
  }, {
    "depth": 2,
    "slug": "examples",
    "text": "Examples"
  }];
}
function _createMdxContent(props) {
  const {Fragment} = props.components || ({});
  if (!Fragment) _missingMdxReference("Fragment");
  return createVNode(Fragment, {
    "set:html": "<p>opencode integrates with your GitHub workflow. Mention <code dir=\"auto\">/opencode</code> or <code dir=\"auto\">/oc</code> in your comment, and opencode will execute tasks within your GitHub Actions runner.</p>\n<hr>\n<h2 id=\"features\"><a href=\"#features\">Features</a></h2>\n<ul>\n<li><strong>Triage issues</strong>: Ask opencode to look into an issue and explain it to you.</li>\n<li><strong>Fix and implement</strong>: Ask opencode to fix an issue or implement a feature. And it will work in a new branch and submits a PR with all the changes.</li>\n<li><strong>Secure</strong>: opencode runs inside your GitHub’s runners.</li>\n</ul>\n<hr>\n<h2 id=\"installation\"><a href=\"#installation\">Installation</a></h2>\n<p>Run the following command in a project that is in a GitHub repo:</p>\n<div class=\"expressive-code\"><link rel=\"stylesheet\" href=\"/docs/_astro/ec.4c0k7.css\"><script type=\"module\" src=\"/docs/_astro/ec.p1z7b.js\"></script><figure class=\"frame is-terminal not-content\"><figcaption class=\"header\"><span class=\"title\"></span><span class=\"sr-only\">Terminal window</span></figcaption><pre data-language=\"bash\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#6F42C1;--1:#B392F0\">opencode</span><span style=\"--0:#24292E;--1:#E1E4E8\"> </span><span style=\"--0:#032F62;--1:#9ECBFF\">github</span><span style=\"--0:#24292E;--1:#E1E4E8\"> </span><span style=\"--0:#032F62;--1:#9ECBFF\">install</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"opencode github install\"><div></div></button></div></figure></div>\n<p>This will walk you through installing the GitHub app, creating the workflow, and setting up secrets.</p>\n<hr>\n<h3 id=\"manual-setup\"><a href=\"#manual-setup\">Manual Setup</a></h3>\n<p>Or you can set it up manually.</p>\n<ol>\n<li>\n<p><strong>Install the GitHub app</strong></p>\n<p>Head over to <a href=\"https://github.com/apps/opencode-agent\"><strong>github.com/apps/opencode-agent</strong></a>. Make sure it’s installed on the target repository.</p>\n</li>\n<li>\n<p><strong>Add the workflow</strong></p>\n<p>Add the following workflow file to <code dir=\"auto\">.github/workflows/opencode.yml</code> in your repo. Make sure to set the appropriate <code dir=\"auto\">model</code> and required API keys in <code dir=\"auto\">env</code>.</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">.github/workflows/opencode.yml</span></figcaption><pre data-language=\"yml\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#1E7734;--1:#85E89D\">name</span><span style=\"--0:#24292E;--1:#E1E4E8\">: </span><span style=\"--0:#032F62;--1:#9ECBFF\">opencode</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#005CC5;--1:#79B8FF\">on</span><span style=\"--0:#24292E;--1:#E1E4E8\">:</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#1E7734;--1:#85E89D\">issue_comment</span><span style=\"--0:#24292E;--1:#E1E4E8\">:</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#1E7734;--1:#85E89D\">types</span><span style=\"--0:#24292E;--1:#E1E4E8\">: [</span><span style=\"--0:#032F62;--1:#9ECBFF\">created</span><span style=\"--0:#24292E;--1:#E1E4E8\">]</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#1E7734;--1:#85E89D\">jobs</span><span style=\"--0:#24292E;--1:#E1E4E8\">:</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#1E7734;--1:#85E89D\">opencode</span><span style=\"--0:#24292E;--1:#E1E4E8\">:</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#1E7734;--1:#85E89D\">if</span><span style=\"--0:#24292E;--1:#E1E4E8\">: </span><span style=\"--0:#BF3441;--1:#F97583\">|</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#032F62;--1:#9ECBFF\">      </span></span><span style=\"--0:#032F62;--1:#9ECBFF\">contains(github.event.comment.body, '/oc') ||</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#032F62;--1:#9ECBFF\">      </span></span><span style=\"--0:#032F62;--1:#9ECBFF\">contains(github.event.comment.body, '/opencode')</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#1E7734;--1:#85E89D\">runs-on</span><span style=\"--0:#24292E;--1:#E1E4E8\">: </span><span style=\"--0:#032F62;--1:#9ECBFF\">ubuntu-latest</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#1E7734;--1:#85E89D\">permissions</span><span style=\"--0:#24292E;--1:#E1E4E8\">:</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#1E7734;--1:#85E89D\">id-token</span><span style=\"--0:#24292E;--1:#E1E4E8\">: </span><span style=\"--0:#032F62;--1:#9ECBFF\">write</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#1E7734;--1:#85E89D\">steps</span><span style=\"--0:#24292E;--1:#E1E4E8\">:</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#24292E;--1:#E1E4E8\">      </span></span><span style=\"--0:#24292E;--1:#E1E4E8\">- </span><span style=\"--0:#1E7734;--1:#85E89D\">name</span><span style=\"--0:#24292E;--1:#E1E4E8\">: </span><span style=\"--0:#032F62;--1:#9ECBFF\">Checkout repository</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--0:#1E7734;--1:#85E89D\">uses</span><span style=\"--0:#24292E;--1:#E1E4E8\">: </span><span style=\"--0:#032F62;--1:#9ECBFF\">actions/checkout@v4</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--0:#1E7734;--1:#85E89D\">with</span><span style=\"--0:#24292E;--1:#E1E4E8\">:</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">          </span><span style=\"--0:#1E7734;--1:#85E89D\">fetch-depth</span><span style=\"--0:#24292E;--1:#E1E4E8\">: </span><span style=\"--0:#005CC5;--1:#79B8FF\">1</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#24292E;--1:#E1E4E8\">      </span></span><span style=\"--0:#24292E;--1:#E1E4E8\">- </span><span style=\"--0:#1E7734;--1:#85E89D\">name</span><span style=\"--0:#24292E;--1:#E1E4E8\">: </span><span style=\"--0:#032F62;--1:#9ECBFF\">Run opencode</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--0:#1E7734;--1:#85E89D\">uses</span><span style=\"--0:#24292E;--1:#E1E4E8\">: </span><span style=\"--0:#032F62;--1:#9ECBFF\">sst/opencode/github@latest</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--0:#1E7734;--1:#85E89D\">env</span><span style=\"--0:#24292E;--1:#E1E4E8\">:</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\">          </span><span style=\"--0:#175927;--1:#85E89D\">ANTHROPIC_API_KEY</span><span style=\"--0:#24292E;--1:#E1E4E8\">: </span><span style=\"--0:#032F62;--1:#9ECBFF\">${{ secrets.ANTHROPIC_API_KEY }}</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--0:#1E7734;--1:#85E89D\">with</span><span style=\"--0:#24292E;--1:#E1E4E8\">:</span></div></div><div class=\"ec-line highlight mark\"><div class=\"code\"><span class=\"indent\">          </span><span style=\"--0:#175927;--1:#85E89D\">model</span><span style=\"--0:#24292E;--1:#E1E4E8\">: </span><span style=\"--0:#032F62;--1:#9ECBFF\">anthropic/claude-sonnet-4-20250514</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">          </span><span style=\"--0:#616972;--1:#99A0A6\"># share: true</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">          </span><span style=\"--0:#616972;--1:#99A0A6\"># github_token: xxxx</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"name: opencodeon:  issue_comment:    types: [created]jobs:  opencode:    if: |      contains(github.event.comment.body, &#x27;/oc&#x27;) ||      contains(github.event.comment.body, &#x27;/opencode&#x27;)    runs-on: ubuntu-latest    permissions:      id-token: write    steps:      - name: Checkout repository        uses: actions/checkout@v4        with:          fetch-depth: 1      - name: Run opencode        uses: sst/opencode/github@latest        env:          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}        with:          model: anthropic/claude-sonnet-4-20250514          # share: true          # github_token: xxxx\"><div></div></button></div></figure></div>\n</li>\n<li>\n<p><strong>Store the API keys in secrets</strong></p>\n<p>In your organization or project <strong>settings</strong>, expand <strong>Secrets and variables</strong> on the left and select <strong>Actions</strong>. And add the required API keys.</p>\n</li>\n</ol>\n<hr>\n<h2 id=\"configuration\"><a href=\"#configuration\">Configuration</a></h2>\n<ul>\n<li>\n<p><code dir=\"auto\">model</code>: The model to use with opencode. Takes the format of <code dir=\"auto\">provider/model</code>. This is <strong>required</strong>.</p>\n</li>\n<li>\n<p><code dir=\"auto\">share</code>: Whether to share the opencode session. Defaults to <strong>true</strong> for public repositories.</p>\n</li>\n<li>\n<p><code dir=\"auto\">token</code>: Optional GitHub access token for performing operations such as creating comments, commiting changes, and opening pull requests. By default, opencode uses the installation access token from the opencode GitHub App, so commits, comments, and pull requests appear as coming from the app.</p>\n<p>Alternatively, you can use the GitHub Action runner’s <a href=\"https://docs.github.com/en/actions/tutorials/authenticate-with-github_token\">built-in <code dir=\"auto\">GITHUB_TOKEN</code></a> without installing the opencode GitHub App. Just make sure to grant the required permissions in your workflow:</p>\n<div class=\"expressive-code\"><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"yaml\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#1E7734;--1:#85E89D\">permissions</span><span style=\"--0:#24292E;--1:#E1E4E8\">:</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#1E7734;--1:#85E89D\">id-token</span><span style=\"--0:#24292E;--1:#E1E4E8\">: </span><span style=\"--0:#032F62;--1:#9ECBFF\">write</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#1E7734;--1:#85E89D\">contents</span><span style=\"--0:#24292E;--1:#E1E4E8\">: </span><span style=\"--0:#032F62;--1:#9ECBFF\">write</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#1E7734;--1:#85E89D\">pull-requests</span><span style=\"--0:#24292E;--1:#E1E4E8\">: </span><span style=\"--0:#032F62;--1:#9ECBFF\">write</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#1E7734;--1:#85E89D\">issues</span><span style=\"--0:#24292E;--1:#E1E4E8\">: </span><span style=\"--0:#032F62;--1:#9ECBFF\">write</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"permissions:  id-token: write  contents: write  pull-requests: write  issues: write\"><div></div></button></div></figure></div>\n<p>You can also use a <a href=\"https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens\">personal access tokens</a>(PAT) if preferred.</p>\n</li>\n</ul>\n<hr>\n<h2 id=\"examples\"><a href=\"#examples\">Examples</a></h2>\n<p>Here are some examples of how you can use opencode in GitHub.</p>\n<ul>\n<li>\n<p><strong>Explain an issue</strong></p>\n<p>Add this comment in a GitHub issue.</p>\n<div class=\"expressive-code\"><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"plaintext\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#24292e;--1:#e1e4e8\">/opencode explain this issue</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"/opencode explain this issue\"><div></div></button></div></figure></div>\n<p>opencode will read the entire thread, including all comments, and reply with a clear explanation.</p>\n</li>\n<li>\n<p><strong>Fix an issue</strong></p>\n<p>In a GitHub issue, say:</p>\n<div class=\"expressive-code\"><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"plaintext\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#24292e;--1:#e1e4e8\">/opencode fix this</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"/opencode fix this\"><div></div></button></div></figure></div>\n<p>And opencode will create a new branch, implement the changes, and open a PR with the changes.</p>\n</li>\n<li>\n<p><strong>Review PRs and make changes</strong></p>\n<p>Leave the following comment on a GitHub PR.</p>\n<div class=\"expressive-code\"><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"plaintext\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#24292e;--1:#e1e4e8\">Delete the attachment from S3 when the note is removed /oc</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"Delete the attachment from S3 when the note is removed /oc\"><div></div></button></div></figure></div>\n<p>opencode will implement the requested change and commit it to the same PR.</p>\n</li>\n</ul>"
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = props.components || ({});
  return MDXLayout ? createVNode(MDXLayout, {
    ...props,
    children: createVNode(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
function _missingMdxReference(id, component) {
  throw new Error("Expected " + ("component" ) + " `" + id + "` to be defined: you likely forgot to import, pass, or provide it.");
}
const url = "src/content/docs/github.mdx";
const file = "/home/josh/projects/sst/opencode/packages/web/src/content/docs/github.mdx";
const Content = (props = {}) => MDXContent({
  ...props,
  components: { Fragment: Fragment, ...props.components, },
});
Content[Symbol.for('mdx-component')] = true;
Content[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter.layout);
Content.moduleId = "/home/josh/projects/sst/opencode/packages/web/src/content/docs/github.mdx";
__astro_tag_component__(Content, 'astro:jsx');

export { Content, Content as default, file, frontmatter, getHeadings, url };
