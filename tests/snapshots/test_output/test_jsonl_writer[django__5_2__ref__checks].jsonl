{"content": "# System check framework\n\nThe system check framework is a set of static checks for validating Django\nprojects. It detects common problems and provides hints for how to fix them.\nThe framework is extensible so you can easily add your own checks.\n\nFor details on how to add your own checks and integrate them with Django\u2019s\nsystem checks, see the [System check topic guide](../topics/checks.md).\n\n## API reference\n\n### `CheckMessage`\n\n`classCheckMessage(level,msg,hint=None,obj=None,id=None)`[[source]](https://github.com/django/django/blob/stable/5.2.x/django/core/checks/messages.py#L9)\n\nThe warnings and errors raised by system checks must be instances of\n`CheckMessage`. An instance encapsulates a single reportable error or\nwarning. It also provides context and hints applicable to the messag", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework"], "order": 0, "level": 1, "tokens": 98, "code_languages": [], "links_out": [{"text": "System check topic guide", "href": "../topics/checks.md"}], "id": "4467739a33ffa607", "char_count": 794}
{"content": "# System check framework\n\nThe system check framework is a set of static checks for validating Django\nprojects. It detects common problems and provides hints for how to fix them.\nThe framework is extensible so you can easily add your own checks.\n\nFor details on how to add your own checks and integrate them with Django\u2019s\nsystem checks, see the [System check topic guide](../topics/checks.md).\n\n## API reference\n\n### `CheckMessage`\n\n`classCheckMessage(level,msg,hint=None,obj=None,id=None)`[[source]](https://github.com/django/django/blob/stable/5.2.x/django/core/checks/messages.py#L9)\n\nThe warnings and errors raised by system checks must be instances of\n`CheckMessage`. An instance encapsulates a single reportable error or\nwarning. It also provides context and hints applicable to the message, and a\nunique identifier that is used for filtering purposes.\n\nConstructor arguments are:\n\n**`level`**\n\nThe severity of the message. Use one of the predefined values: `DEBUG`,\n`INFO`, `WARNING`, `ERROR`, `CRITICAL`. If the level is greater or\nequal to `ERROR`, then Django will prevent management commands from\nexecuting. Messages with level lower than `ERROR` (i.e. warnings) are\nreported to the console, but can be silenced.\n\n**`msg`**\n\nA short (less than 80 characters) string describing the problem. The string\nshould *not* contain newlines.\n\n**`hint`**\n\nA single-line string providing a hint for fixing the problem. If no hint\ncan be provided, or the hint is self-evident from the error message, the\nhint can be omitted, or a value of `None` can be used.\n\n**`obj`**\n\nOptional. An object providing context for the message (for example, the\nmodel where the problem was discovered). The object should be a model,\nfield, or manager or any other object that defines a `__str__()` method.\nThe method is used while reporting all messages and its result precedes the\nmessage.\n\n**`id`**\n\nOptional string. A unique identifier for the issue. Identifiers should\nfollow the pattern `applabel.X001`, where `X` is one of the letters\n`CEWID`, indicating the message severity (`C` for criticals, `E` for\nerrors and so). The number can be allocated by the application, but should\nbe unique within that application.\n\nThere are subclasses to make creating messages with common levels easier. When\nusing them you can omit the `level` argument because it is implied by the\nclass name.\n\n`classDebug(msg,hint=None,obj=None,id=None)`[[source]](https://github.com/django/django/blob/stable/5.2.x/django/core/checks/messages.py#L59)\n\n`classInfo(msg,hint=None,obj=None,id=None)`[[source]](https://github.com/django/django/blob/stable/5.2.x/django/core/checks/messages.py#L64)\n\n`classWarning(msg,hint=None,obj=None,id=None)`[[source]](https://github.com/django/django/blob/stable/5.2.x/django/core/checks/messages.py#L69)\n\n`classError(msg,hint=None,obj=None,id=None)`[[source]](https://github.com/django/django/blob/stable/5.2.x/django/core/checks/messages.py#L74)\n\n`classCritical(msg,hint=None,obj=None,id=None)`[[source]](https://github.com/django/django/blob/stable/5.2.x/django/core/checks/messages.py#L79)\n\n## Builtin tags\n\nDjango\u2019s system checks are organized using the following tags:\n\n- `admin`: Checks of any admin site declarations.\n- `async_support`: Checks asynchronous-related configuration.\n- `caches`: Checks cache related configuration.\n- `compatibility`: Flags potential problems with version upgrades.\n- `commands`: Checks custom management commands related configuration.\n- `database`: Checks ", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "API reference"], "order": 1, "level": 2, "tokens": 672, "code_languages": [], "links_out": [], "id": "2e23dd2b03b62f38", "char_count": 3484}
{"content": "None,id=None)`[[source]](https://github.com/django/django/blob/stable/5.2.x/django/core/checks/messages.py#L69)\n\n`classError(msg,hint=None,obj=None,id=None)`[[source]](https://github.com/django/django/blob/stable/5.2.x/django/core/checks/messages.py#L74)\n\n`classCritical(msg,hint=None,obj=None,id=None)`[[source]](https://github.com/django/django/blob/stable/5.2.x/django/core/checks/messages.py#L79)\n\n## Builtin tags\n\nDjango\u2019s system checks are organized using the following tags:\n\n- `admin`: Checks of any admin site declarations.\n- `async_support`: Checks asynchronous-related configuration.\n- `caches`: Checks cache related configuration.\n- `compatibility`: Flags potential problems with version upgrades.\n- `commands`: Checks custom management commands related configuration.\n- `database`: Checks database-related configuration issues. Database checks\n  are not run by default because they do more than static code analysis as\n  regular checks do. They are only run by the [`migrate`](django-admin.md#django-admin-migrate) command or if\n  you specify configured database aliases using the `--database` option when\n  calling the [`check`](django-admin.md#django-admin-check) command.\n- `files`: Checks files related configuration.\n- `models`: Checks of model, field, and manager definitions.\n- `security`: Checks security related configuration.\n- `signals`: Checks on signal declarations and handler registrations.\n- `sites`: Checks [`django.contrib.sites`](contrib/sites.md#module-django.contrib.sites) configuration.\n- `staticfiles`: Checks [`django.contrib.staticfiles`](contrib/staticfiles.md#module-django.contrib.staticfiles) configuration.\n- `templates`: Checks template related configuration.\n- `translation`: Checks translation related configuration.\n- `urls`: Checks URL configuration.\n\nSome checks may be registered with multiple tags.\n\n## Core system checks", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "Builtin tags"], "order": 2, "level": 2, "tokens": 362, "code_languages": [], "links_out": [{"text": "`migrate`", "href": "django-admin.md#django-admin-migrate"}, {"text": "`check`", "href": "django-admin.md#django-admin-check"}, {"text": "`django.contrib.sites`", "href": "contrib/sites.md#module-django.contrib.sites"}, {"text": "`django.contrib.staticfiles`", "href": "contrib/staticfiles.md#module-django.contrib.staticfiles"}], "id": "fe6099d4da543d80", "char_count": 1873}
{"content": "rib.sites`](contrib/sites.md#module-django.contrib.sites) configuration.\n- `staticfiles`: Checks [`django.contrib.staticfiles`](contrib/staticfiles.md#module-django.contrib.staticfiles) configuration.\n- `templates`: Checks template related configuration.\n- `translation`: Checks translation related configuration.\n- `urls`: Checks URL configuration.\n\nSome checks may be registered with multiple tags.\n\n## Core system checks\n\n### Asynchronous support\n\nThe following checks verify your setup for [Asynchronous support](../topics/async.md):\n\n- **async.E001**: You should not set the [`DJANGO_ALLOW_ASYNC_UNSAFE`](../topics/async.md#envvar-DJANGO_ALLOW_ASYNC_UNSAFE)\n  environment variable in deployment. This disables [async safety\n  protection](../topics/async.md#async-safety).", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "Core system checks"], "order": 3, "level": 2, "tokens": 5, "code_languages": [], "links_out": [], "id": "20313cdbfaa6f9aa", "char_count": 776}
{"content": "## Core system checks\n\n### Asynchronous support\n\nThe following checks verify your setup for [Asynchronous support](../topics/async.md):\n\n- **async.E001**: You should not set the [`DJANGO_ALLOW_ASYNC_UNSAFE`](../topics/async.md#envvar-DJANGO_ALLOW_ASYNC_UNSAFE)\n  environment variable in deployment. This disables [async safety\n  protection](../topics/async.md#async-safety).\n\n### Backwards compatibility\n\nCompatibility checks warn of potential problems that might occur after\nupgrading Django.\n\n- **2\\_0.W001**: Your URL pattern `<pattern>` has a `route` that contains\n  `(?P<`, begins with a `^`, or ends with a `$`. This was likely an\n  oversight when migrating from `url()` to [`path()`](urls.md#django.urls.path).\n- **4\\_0.E001**: As of Django 4.0, the values in the\n  [`C", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "Core system checks", "Asynchronous support"], "order": 4, "level": 3, "tokens": 87, "code_languages": [], "links_out": [{"text": "Asynchronous support", "href": "../topics/async.md"}, {"text": "`DJANGO_ALLOW_ASYNC_UNSAFE`", "href": "../topics/async.md#envvar-DJANGO_ALLOW_ASYNC_UNSAFE"}, {"text": "async safety\n  protection", "href": "../topics/async.md#async-safety"}], "id": "9d9edd691585850c", "char_count": 776}
{"content": "### Asynchronous support\n\nThe following checks verify your setup for [Asynchronous support](../topics/async.md):\n\n- **async.E001**: You should not set the [`DJANGO_ALLOW_ASYNC_UNSAFE`](../topics/async.md#envvar-DJANGO_ALLOW_ASYNC_UNSAFE)\n  environment variable in deployment. This disables [async safety\n  protection](../topics/async.md#async-safety).\n\n### Backwards compatibility\n\nCompatibility checks warn of potential problems that might occur after\nupgrading Django.\n\n- **2\\_0.W001**: Your URL pattern `<pattern>` has a `route` that contains\n  `(?P<`, begins with a `^`, or ends with a `$`. This was likely an\n  oversight when migrating from `url()` to [`path()`](urls.md#django.urls.path).\n- **4\\_0.E001**: As of Django 4.0, the values in the\n  [`CSRF_TRUSTED_ORIGINS`](settings.md#std-setting-CSRF_TRUSTED_ORIGINS) setting must start with a scheme (usually\n  `http://` or `https://`) but found `<hostname>`.\n\n### Caches\n\nThe following checks verify that your [`CACHES`](settings.md#std-setting-CACHES) setting is correctly\nconfigured:\n\n- **caches.E001**: You must define a `'default'` cache in your\n  [`CACHES`](settings.md#std-setting-CACHES) setting.\n- **caches.W002**: Your `<cache>` configuration might expose your cache or\n  lead to corruption of your data because its\n  [`LOCATION`](settings.md#std-sett", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "Core system checks", "Backwards compatibility"], "order": 5, "level": 3, "tokens": 140, "code_languages": [], "links_out": [{"text": "`path()`", "href": "urls.md#django.urls.path"}, {"text": "`CSRF_TRUSTED_ORIGINS`", "href": "settings.md#std-setting-CSRF_TRUSTED_ORIGINS"}], "id": "ad34753fbaf75264", "char_count": 1315}
{"content": "rn>` has a `route` that contains\n  `(?P<`, begins with a `^`, or ends with a `$`. This was likely an\n  oversight when migrating from `url()` to [`path()`](urls.md#django.urls.path).\n- **4\\_0.E001**: As of Django 4.0, the values in the\n  [`CSRF_TRUSTED_ORIGINS`](settings.md#std-setting-CSRF_TRUSTED_ORIGINS) setting must start with a scheme (usually\n  `http://` or `https://`) but found `<hostname>`.\n\n### Caches\n\nThe following checks verify that your [`CACHES`](settings.md#std-setting-CACHES) setting is correctly\nconfigured:\n\n- **caches.E001**: You must define a `'default'` cache in your\n  [`CACHES`](settings.md#std-setting-CACHES) setting.\n- **caches.W002**: Your `<cache>` configuration might expose your cache or\n  lead to corruption of your data because its\n  [`LOCATION`](settings.md#std-setting-CACHES-LOCATION) matches/is inside/contains\n  [`MEDIA_ROOT`](settings.md#std-setting-MEDIA_ROOT)/[`STATIC_ROOT`](settings.md#std-setting-STATIC_ROOT)/[`STATICFILES_DIRS`](settings.md#std-setting-STATICFILES_DIRS).\n- **caches.W003**: Your `<cache>` cache [`LOCATION`](settings.md#std-setting-CACHES-LOCATION)\n  is relative. Use an absolute path instead.\n\n### Database\n\n#### MySQL and MariaDB\n\nIf you\u2019re using MySQL or MariaDB, the following checks will be performed:\n\n- **mysql.E001**: MySQL/MariaDB does not allow unique `CharField`s to have a\n  `max_length` > 255. *This check was changed to* `mysql.W003` *in Django\n  3.1 as the real maximum size depends on many factors.*\n- **mysql.W002**: MySQL/MariaDB Strict Mode is not set for database connection\n", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "Core system checks", "Caches"], "order": 6, "level": 3, "tokens": 189, "code_languages": [], "links_out": [{"text": "`CACHES`", "href": "settings.md#std-setting-CACHES"}, {"text": "`CACHES`", "href": "settings.md#std-setting-CACHES"}, {"text": "`LOCATION`", "href": "settings.md#std-setting-CACHES-LOCATION"}, {"text": "`MEDIA_ROOT`", "href": "settings.md#std-setting-MEDIA_ROOT"}, {"text": "`STATIC_ROOT`", "href": "settings.md#std-setting-STATIC_ROOT"}, {"text": "`STATICFILES_DIRS`", "href": "settings.md#std-setting-STATICFILES_DIRS"}, {"text": "`LOCATION`", "href": "settings.md#std-setting-CACHES-LOCATION"}], "id": "ff9d3907e686cbf2", "char_count": 1560}
{"content": "ause its\n  [`LOCATION`](settings.md#std-setting-CACHES-LOCATION) matches/is inside/contains\n  [`MEDIA_ROOT`](settings.md#std-setting-MEDIA_ROOT)/[`STATIC_ROOT`](settings.md#std-setting-STATIC_ROOT)/[`STATICFILES_DIRS`](settings.md#std-setting-STATICFILES_DIRS).\n- **caches.W003**: Your `<cache>` cache [`LOCATION`](settings.md#std-setting-CACHES-LOCATION)\n  is relative. Use an absolute path instead.\n\n### Database\n\n#### MySQL and MariaDB\n\nIf you\u2019re using MySQL or MariaDB, the following checks will be performed:\n\n- **mysql.E001**: MySQL/MariaDB does not allow unique `CharField`s to have a\n  `max_length` > 255. *This check was changed to* `mysql.W003` *in Django\n  3.1 as the real maximum size depends on many factors.*\n- **mysql.W002**: MySQL/MariaDB Strict Mode is not set for database connection\n  `<alias>`. See also [Setting sql\\_mode](databases.md#mysql-sql-mode).\n- **mysql.W003**: MySQL/MariaDB may not allow unique `CharField`s to have a\n  `max_length` > 255.\n\n### Managing files\n\nThe following checks verify your setup for [Managing files](../topics/files.md):\n\n- **files.E001**: The [`FILE_UPLOAD_TEMP_DIR`](settings.md#std-setting-FILE_UPLOAD_TEMP_DIR) setting refers to the\n  nonexistent directory `<path>`.", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "Core system checks", "Database"], "order": 7, "level": 3, "tokens": 142, "code_languages": [], "links_out": [], "id": "3b1b1c2e6a76826e", "char_count": 1223}
{"content": "harField`s to have a\n  `max_length` > 255. *This check was changed to* `mysql.W003` *in Django\n  3.1 as the real maximum size depends on many factors.*\n- **mysql.W002**: MySQL/MariaDB Strict Mode is not set for database connection\n  `<alias>`. See also [Setting sql\\_mode](databases.md#mysql-sql-mode).\n- **mysql.W003**: MySQL/MariaDB may not allow unique `CharField`s to have a\n  `max_length` > 255.\n\n### Managing files\n\nThe following checks verify your setup for [Managing files](../topics/files.md):\n\n- **files.E001**: The [`FILE_UPLOAD_TEMP_DIR`](settings.md#std-setting-FILE_UPLOAD_TEMP_DIR) setting refers to the\n  nonexistent directory `<path>`.\n\n### Model fields\n\n- **fields.E001**: Field names must not end with an underscore.\n- **fields.E002**: Field names must not contain `\"__\"`.\n- **fields.E003**: `pk` is a reserved word that cannot be used as a field\n  name.\n- **fields.E004**: `choices` must be a mapping (e.g. a dictionary) or an\n  iterable (e.g. a list or tuple).\n- **fields.E005**: `choices` must be a mapping of actual values to human", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "Core system checks", "Managing files"], "order": 8, "level": 3, "tokens": 62, "code_languages": [], "links_out": [{"text": "Managing files", "href": "../topics/files.md"}, {"text": "`FILE_UPLOAD_TEMP_DIR`", "href": "settings.md#std-setting-FILE_UPLOAD_TEMP_DIR"}], "id": "b3a67f04bd25f5db", "char_count": 1054}
{"content": "### Managing files\n\nThe following checks verify your setup for [Managing files](../topics/files.md):\n\n- **files.E001**: The [`FILE_UPLOAD_TEMP_DIR`](settings.md#std-setting-FILE_UPLOAD_TEMP_DIR) setting refers to the\n  nonexistent directory `<path>`.\n\n### Model fields\n\n- **fields.E001**: Field names must not end with an underscore.\n- **fields.E002**: Field names must not contain `\"__\"`.\n- **fields.E003**: `pk` is a reserved word that cannot be used as a field\n  name.\n- **fields.E004**: `choices` must be a mapping (e.g. a dictionary) or an\n  iterable (e.g. a list or tuple).\n- **fields.E005**: `choices` must be a mapping of actual values to human\n  readable names or an iterable containing `(actual value, human readable\n  name)` tuples.\n- **fields.E006**: `db_index` must be `None`, `True` or `False`.\n- **fields.E007**: Primary keys must not have `null=True`.\n- **fields.E008**: All `validators` must be callable.\n- **fields.E009**: `max_length` is too small to fit the longest value in\n  `choices` (`<count>` characters).\n- **fields.E010**: `<field>` default should be a callable instead of an\n  instance so that it\u2019s not shared between all field instances.\n- **fields.E011**: `<database>` does not support default database values with\n  expressions (`db_default`).\n- **fields.E012**: `<expression>` cannot be used in `db_default`.\n- **fields.E013**: `CompositePrimaryKey` must be named `pk`.\n- **fields.E100**: `AutoField`s must set primary\\_key=True.\n- **fields.E110**: `BooleanField`s do not accept null values. *This check\n  appeared before support for null values was added in Django 2.1.*\n- **fields.E120**: `CharField`s must define a `max_length` attribute.\n- **fields.E121**: `max_length` must be a positive integer.\n- **fields.W122**: `max_length` is ignored when used with\n  `<integer field type>`.\n- **fields.E130**: `DecimalField`s must define a `decimal_places` attribute.\n- **fields.E131**: `decimal_places` must be a non-negative integer.\n- **fields.E132**: `DecimalField`s must define a `max_digits` attribute.\n- **fields.E133**: `max_digits` must be a positive integer.\n- **fields.E134**: `max_digits` must be greater or equal to `decimal_places`.\n- **fields.E140**: `FilePathField`s must have either `allow_files` or\n  `allow_folders` set to True.\n- **fields.E150**: `GenericIPAddressField`s cannot have `blank=True` if\n  `null=False`, as blank values are stored as nulls.\n- **fields.E160**: The options `auto_now`, `auto_now_add`, and `default`\n  are mutually exclusive. Only one of these options may be present.\n- **fields.W161**: Fixed default value provided.\n- **fields.W162**: `<database>` does not support a database index on\n  `<field data type>` columns.\n- **fields.W163**: `<database>` does not support comments on columns\n  (`db_comment`).\n- **fields.E170**: `BinaryField`\u2019s `default` cannot be a string. Use bytes\n  content instead.\n- **fields.E180**: `<database>` does not support `JSONField`s.\n- **fields.E190**: `<database>` does not support a database collation on\n  `<field_type>`s.\n- **fields.E220**: `<database>` does not support `GeneratedField`s.\n- **fields.E221**: `<database>` does not support non-persisted\n  `GeneratedField`s.\n- **fields.E222**: `<database>` does not support persisted\n  `GeneratedField`s.\n- **fields.E223**: `GeneratedField.output_field` has errors: \u2026\n- **fields.W224**: `GeneratedField.output_field` has warnings: \u2026\n- **fields.E900**: `IPAddressField` has been removed except for support in\n  historical migrations.\n- **fields.W900**: `IPAddressField` has been deprecated. Support for it\n  (except in historical migrations) will be removed in Django 1.9. *This check\n  appeared in Django 1.7 and 1.8*.\n- **fields.W901**: `CommaSeparatedIntegerField` has been deprecated. Support\n  for it (except in historical migrations) will be removed in Django 2.0. *This\n  check appeared in Django 1.10 and 1.11*.\n- **fields.E901**: `CommaSeparatedIntegerField` is removed except for support\n  in historical migrations.\n- **fields.W902**: `FloatRangeField` is deprecated and will be removed in\n  Django 3.1. *This check appeared in Django 2.2 and 3.0*.\n- **fields.W903**: `NullBooleanField` is deprecated. Support for it (except\n  in historical migrations) will be removed in Django 4.0. *This check appeared\n  in Django 3.1 and 3.2*.\n- **fields.E903**: `NullBooleanField` is removed except for support in\n  historical migrations.\n- **fields.W904**: `django.contrib.postgres.fields.JSONField` is deprecated.\n  Support for it (except in historical migrations) will be removed in Django\n  4.0. *This check appeared in Django 3.1 and 3.2*.\n- **fields.E904**: `django.contrib.postgres.fields.JSONField` is removed\n  except for support in historical migrations.\n- **fields.W905**: `django.contrib.postgres.fields.CICharField` is\n  deprecated. Support for it (except in historical migrations) will be removed\n  in Django 5.1. *This check appeared in Django 4.2 and 5.0*.\n- **fields.E905**: `django.contrib.postgres.fields.CICharField` is removed\n  except for support in historical migrations.\n- **fields.W906**: `django.contrib.postgres.fields.CIEmailField` is\n  deprecated. Support for it (except in historical migrations) will be removed\n  in Django 5.1. *This check appeared in Django 4.2 and 5.0*.\n- **fields.E906**: `django.contrib.postgres.fields.CIEmailField` is removed\n  except for support in historical migrations.\n- **fields.W907**: `django.contrib.postgres.fields.CITextField` is\n  deprecated. Support for it (except in historical migrations) will be removed\n  in Django 5.1. *This check appeared in Django 4.2 and 5.0*.\n- **fields.E907**: `django.contrib.postgres.fields.CITextField` is removed\n  except for support for historical migrations.\n\n#### File fields\n\n- **fields.E200**: `unique` is not a valid argument for a `FileField`.\n  *This check is removed in Django 1.11*.\n- **fields.E201**: `primary_key` is not a valid argument for a `FileField`.\n- **fields.E202**: `FileField`\u2019s `upload_to` argument must be a relative\n  path, not an absolute path.\n- **fields.E210**: Cannot use `ImageField` because Pillow is not installed.", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "Core system checks", "Model fields"], "order": 9, "level": 3, "tokens": 1363, "code_languages": [], "links_out": [], "id": "3a8b00ed8054801a", "char_count": 6094}
{"content": "EmailField` is removed\n  except for support in historical migrations.\n- **fields.W907**: `django.contrib.postgres.fields.CITextField` is\n  deprecated. Support for it (except in historical migrations) will be removed\n  in Django 5.1. *This check appeared in Django 4.2 and 5.0*.\n- **fields.E907**: `django.contrib.postgres.fields.CITextField` is removed\n  except for support for historical migrations.\n\n#### File fields\n\n- **fields.E200**: `unique` is not a valid argument for a `FileField`.\n  *This check is removed in Django 1.11*.\n- **fields.E201**: `primary_key` is not a valid argument for a `FileField`.\n- **fields.E202**: `FileField`\u2019s `upload_to` argument must be a relative\n  path, not an absolute path.\n- **fields.E210**: Cannot use `ImageField` because Pillow is not installed.\n\n#### Related fields", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "Core system checks", "Model fields", "File fields"], "order": 10, "level": 4, "tokens": 96, "code_languages": [], "links_out": [], "id": "579489e10c267e14", "char_count": 808}
{"content": "#### File fields\n\n- **fields.E200**: `unique` is not a valid argument for a `FileField`.\n  *This check is removed in Django 1.11*.\n- **fields.E201**: `primary_key` is not a valid argument for a `FileField`.\n- **fields.E202**: `FileField`\u2019s `upload_to` argument must be a relative\n  path, not an absolute path.\n- **fields.E210**: Cannot use `ImageField` because Pillow is not installed.\n\n#### Related fields\n\n- **fields.E300**: Field defines a relation with model `<model>`, which is\n  either not installed, or is abstract.\n- **fields.E301**: Field defines a relation with the model\n  `<app_label>.<model>` which has been swapped out.\n- **fields.E302**: Reverse accessor `<related model>.<accessor name>` for\n  `<app_label>.<model>.<field name>` clashes with field name\n  `<app_label>.<model>.<field name>`.\n-", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "Core system checks", "Model fields", "Related fields"], "order": 11, "level": 4, "tokens": 4, "code_languages": [], "links_out": [], "id": "ead04a1aa33df6fd", "char_count": 808}
{"content": "#### Related fields\n\n- **fields.E300**: Field defines a relation with model `<model>`, which is\n  either not installed, or is abstract.\n- **fields.E301**: Field defines a relation with the model\n  `<app_label>.<model>` which has been swapped out.\n- **fields.E302**: Reverse accessor `<related model>.<accessor name>` for\n  `<app_label>.<model>.<field name>` clashes with field name\n  `<app_label>.<model>.<field name>`.\n- **fields.E303**: Reverse query name for `<app_label>.<model>.<field name>`\n  clashes with field name `<app_label>.<model>.<field name>`.\n- **fields.E304**: Reverse accessor `<related model>.<accessor name>` for\n  `<app_label>.<model>.<field name>` clashes with reverse accessor for\n  `<app_label>.<model>.<field name>`.\n- **fields.E305**: Reverse query name for `<app_label>.<model>.<field name>`\n  clashes with reverse query name for `<app_label>.<model>.<field name>`.\n- **fields.E306**: The name `<name>` is invalid `related_name` for field\n  `<model>.<field name>`.\n- **fields.E307**: The field `<app label>.<model>.<field name>` was declared\n  with a lazy reference to `<app label>.<model>`, but app `<app label>`\n  isn\u2019t installed or doesn\u2019t provide model `<model>`.\n- **fields.E308**: Reverse query name `<related query name>` must not end\n  with an underscore.\n- **fields.E309**: Reverse query name `<related query name>` must not contain\n  `'__'`.\n- **fields.E310**: No subset of the fields `<field1>`, `<field2>`, \u2026 on\n  model `<model>` is unique.\n- **fields.E311**: `<model>.<field name>` must be unique because it is\n  referenced by a `ForeignKey`.\n- **fields.E312**: The `to_field` `<field name>` doesn\u2019t exist on the\n  related model `<app label>.<model>`.\n- **fields.E320**: Field specifies `on_delete=SET_NULL`, but cannot be null.\n- **fields.E321**: The field specifies `on_delete=SET_DEFAULT`, but has no\n  default value.\n- **fields.E330**: `ManyToManyField`s cannot be unique.\n- **fields.E331**: Field specifies a many-to-many relation through model\n  `<model>`, which has not been installed.\n- **fields.E332**: Many-to-many fields with intermediate tables must not be\n  symmetrical. *This check appeared before Django 3.0.*\n- **fields.E333**: The model is used as an intermediate model by `<model>`,\n  but it has more than two foreign keys to `<model>`, which is ambiguous.\n  You must specify which two foreign keys Django should use via the\n  `through_fields` keyword argument.\n- **fields.E334**: The model is used as an intermediate model by `<model>`,\n  but it has more than one foreign key from `<model>`, which is ambiguous.\n  You must specify which foreign key Django should use via the\n  `through_fields` keyword argument.\n- **fields.E335**: The model is used as an intermediate model by `<model>`,\n  but it has more than one foreign key to `<model>`, which is ambiguous.\n  You must specify which foreign key Django should use via the\n  `through_fields` keyword argument.\n- **fields.E336**: The model is used as an intermediary model by `<model>`,\n  but it does not have foreign key to `<model>` or `<model>`.\n- **fields.E337**: Field specifies `through_fields` but does not provide the\n  names of the two link fields that should be used for the relation through\n  `<model>`.\n- **fields.E338**: The intermediary model `<through model>` has no field\n  `<field name>`.\n- **fields.E339**: `<model>.<field name>` is not a foreign key to `<model>`.\n- **fields.E340**: The field\u2019s intermediary table `<table name>` clashes with\n  the table name of `<model>`/`<model>.<field name>`.\n- **fields.W340**: `null` has no effect on `ManyToManyField`.\n- **fields.W341**: `ManyToManyField` does not support `validators`.\n- **fields.W342**: Setting `unique=True` on a `ForeignKey` has the same\n  effect as using a `OneToOneField`.\n- **fields.W343**: `limit_choices_to` has no effect on `ManyToManyField`\n  with a `through` model. *This check appeared before Django 4.0.*\n- **fields.W344**: The field\u2019s intermediary table `<table name>` clashes with\n  the table name of `<model>`/`<model>.<field name>`.\n- **fields.W345**: `related_name` has no effect on `ManyToManyField` with a\n  symmetrical relationship, e.g. to \u201cself\u201d.\n- **fields.W346**: `db_comment` has no effect on `ManyToManyField`.\n- **fields.E347**: Field defines a relation involving model `<model>` which\n  has a `CompositePrimaryKey` and such relations are not supported.", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "Core system checks", "Model fields", "Related fields"], "order": 12, "level": 4, "tokens": 1086, "code_languages": [], "links_out": [], "id": "efe701d13c933318", "char_count": 4366}
{"content": "` clashes with\n  the table name of `<model>`/`<model>.<field name>`.\n- **fields.W345**: `related_name` has no effect on `ManyToManyField` with a\n  symmetrical relationship, e.g. to \u201cself\u201d.\n- **fields.W346**: `db_comment` has no effect on `ManyToManyField`.\n- **fields.E347**: Field defines a relation involving model `<model>` which\n  has a `CompositePrimaryKey` and such relations are not supported.\n\n\n\n### Models", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "Core system checks", "Model fields", "Related fields"], "order": 13, "level": 4, "tokens": 0, "code_languages": [], "links_out": [], "id": "8da3cd5dc4a23466", "char_count": 414}
{"content": "### Models\n\n- **models.E001**: `<swappable>` is not of the form `app_label.app_name`.\n- **models.E002**: `<SETTING>` references `<model>`, which has not been\n  installed, or is abstract.\n- **models.E003**: The model has two identical many-to-many relations through\n  the intermediate model `<app_label>.<model>`.\n- **models.E004**: `id` can only be used as a field name if the field also\n  sets `primary_key=True", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "Core system checks", "Models"], "order": 14, "level": 3, "tokens": 2, "code_languages": [], "links_out": [], "id": "9e65819877d6735a", "char_count": 412}
{"content": "### Models\n\n- **models.E001**: `<swappable>` is not of the form `app_label.app_name`.\n- **models.E002**: `<SETTING>` references `<model>`, which has not been\n  installed, or is abstract.\n- **models.E003**: The model has two identical many-to-many relations through\n  the intermediate model `<app_label>.<model>`.\n- **models.E004**: `id` can only be used as a field name if the field also\n  sets `primary_key=True`.\n- **models.E005**: The field `<field name>` from parent model `<model>`\n  clashes with the field `<field name>` from parent model `<model>`.\n- **models.E006**: The field `<field name>` clashes with the field\n  `<field name>` from model `<model>`.\n- **models.E007**: Field `<field name>` has column name `<column name>`\n  that is used by another field.\n- **models.E008**: `index_together` must be a list or tuple. *This check\n  appeared before Django 5.1.*\n- **models.E009**: All `index_together` elements must be lists or tuples.\n  *This check appeared before Django 5.1.*\n- **models.E010**: `unique_together` must be a list or tuple.\n- **models.E011**: All `unique_together` elements must be lists or tuples.\n- **models.E012**: `constraints/indexes/unique_together` refers to the\n  nonexistent field `<field name>`.\n- **models.E013**: `constraints/indexes/unique_together` refers to a\n  `ManyToManyField` `<field name>`, but `ManyToManyField`s are not\n  supported for that option.\n- **models.E014**: `ordering` must be a tuple or list (even if you want to\n  order by only one field).\n- **models.E015**: `ordering` refers to the nonexistent field, related field,\n  or lookup `<field name>`.\n- **models.E016**: `constraints/indexes/unique_together` refers to field\n  `<field_name>` which is not local to model `<model>`.\n- **models.E017**: Proxy model `<model>` contains model fields.\n- **models.E018**: Autogenerated column name too long for field `<field>`.\n  Maximum length is `<maximum length>` for database `<alias>`.\n- **models.E019**: Autogenerated column name too long for M2M field\n  `<M2M field>`. Maximum length is `<maximum length>` for database\n  `<alias>`.\n- **models.E020**: The `<model>.check()` class method is currently overridden.\n- **models.E021**: `ordering` and `order_with_respect_to` cannot be used\n  together.\n- **models.E022**: `<function>` contains a lazy reference to\n  `<app label>.<model>`, but app `<app label>` isn\u2019t installed or\n  doesn\u2019t provide model `<model>`.\n- **models.E023**: The model name `<model>` cannot start or end with an\n  underscore as it collides with the query lookup syntax.\n- **models.E024**: The model name `<model>` cannot contain double underscores\n  as it collides with the query lookup syntax.\n- **models.E025**: The property `<property name>` clashes with a related\n  field accessor.\n- **models.E026**: The model cannot have more than one field with\n  `primary_key=True`.\n- **models.W027**: `<database>` does not support check constraints.\n- **models.E028**: `db_table` `<db_table>` is used by multiple models:\n  `<model list>`.\n- **models.E029**: index name `<index>` is not unique for model `<model>`.\n- **models.E030**: index name `<index>` is not unique among models:\n  `<model list>`.\n- **models.E031**: constraint name `<constraint>` is not unique for model\n  `<model>`.\n- **models.E032**: constraint name `<constraint>` is not unique among\n  models: `<model list>`.\n- **models.E033**: The index name `<index>` cannot start with an underscore\n  or a number.\n- **models.E034**: The index name `<index>` cannot be longer than\n  `<max_length>` characters.\n- **models.W035**: `db_table` `<db_table>` is used by multiple models:\n  `<model list>`.\n- **models.W036**: `<database>` does not support unique constraints with\n  conditions.\n- **models.W037**: `<database>` does not support indexes with conditions.\n- **models.W038**: `<database>` does not support deferrable unique\n  constraints.\n- **models.W039**: `<database>` does not support unique constraints with\n  non-key columns.\n- **models.W040**: `<database>` does not support indexes with non-key\n  columns.\n- **models.E041**: `constraints` refers to the joined field `<field name>`.\n- **models.E042**: `<field name>` cannot be included in the composite\n  primary key.\n- **models.W042**: Auto-created primary key used when not defining a primary\n  key type, by default `django.db.models.AutoField`.\n- **models.W043**: `<database>` does not support indexes on expressions.\n- **models.W044**: `<database>` does not support unique constraints on\n  expressions.\n- **models.W045**: Check constraint `<constraint>` contains `RawSQL()`\n  expression and won\u2019t be validated during the model `full_clean()`.\n- **models.W046**: `<database>` does not support comments on tables\n  (`db_table_comment`).\n- **models.W047**: `<database>` does not support unique constraints with\n  nulls distinct.\n- **models.E048**: `constraints/indexes/unique_together` refers to a\n  `CompositePrimaryKey` `<field name>`, but `CompositePrimaryKey`s are\n  not supported for that option.", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "Core system checks", "Models"], "order": 15, "level": 3, "tokens": 1242, "code_languages": [], "links_out": [], "id": "7c036cd63f29f877", "char_count": 4982}
{"content": "e validated during the model `full_clean()`.\n- **models.W046**: `<database>` does not support comments on tables\n  (`db_table_comment`).\n- **models.W047**: `<database>` does not support unique constraints with\n  nulls distinct.\n- **models.E048**: `constraints/indexes/unique_together` refers to a\n  `CompositePrimaryKey` `<field name>`, but `CompositePrimaryKey`s are\n  not supported for that option.\n\n\n\n### Management Commands\n\nThe following checks verify custom management commands are correctly configured:\n\n- **commands.E001**: The `migrate` and `makemigrations` commands must have\n  the same `autodetector`.", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "Core system checks", "Models"], "order": 16, "level": 3, "tokens": 0, "code_languages": [], "links_out": [], "id": "abf3c391191711ca", "char_count": 612}
{"content": "### Management Commands\n\nThe following checks verify custom management commands are correctly configured:\n\n- **commands.E001**: The `migrate` and `makemigrations` commands must have\n  the same `autodetector`.\n\n### Security\n\nThe security checks do not make your site secure. They do not audit code, do\nintrusion detection, or do anything particularly complex. Rather, they help\nperform an automated, low-hanging-fruit checklist, that can help you to improve\nyour site\u2019s security.\n\nSome of these checks may not be appropriate for your particular deployment\nconfiguration. For instance, if you do your HTTP to HTTP", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "Core system checks", "Management Commands"], "order": 17, "level": 3, "tokens": 52, "code_languages": [], "links_out": [], "id": "6329523534f4ff17", "char_count": 611}
{"content": "### Management Commands\n\nThe following checks verify custom management commands are correctly configured:\n\n- **commands.E001**: The `migrate` and `makemigrations` commands must have\n  the same `autodetector`.\n\n### Security\n\nThe security checks do not make your site secure. They do not audit code, do\nintrusion detection, or do anything particularly complex. Rather, they help\nperform an automated, low-hanging-fruit checklist, that can help you to improve\nyour site\u2019s security.\n\nSome of these checks may not be appropriate for your particular deployment\nconfiguration. For instance, if you do your HTTP to HTTPS redirection in a load\nbalancer, it\u2019d be irritating to be constantly warned about not having enabled\n[`SECURE_SSL_REDIRECT`](settings.md#std-setting-SECURE_SSL_REDIRECT). Use [`SILENCED_SYSTEM_CHECKS`](settings.md#std-setting-SILENCED_SYSTEM_CHECKS) to\nsilence unneeded checks.\n\nThe following checks are run if you use the [`check --deploy`](django-admin.md#cmdoption-check-deploy) option:\n\n- **security.W001**: You do not have\n  [`django.middleware.security.SecurityMiddleware`](middleware.md#django.middleware.security.SecurityMiddleware) in your\n  [`MIDDLEWARE`](settings.md#std-setting-MIDDLEWARE) so the [`SECURE_HSTS_SECONDS`](settings.md#std-setting-SECURE_HSTS_SECONDS),\n  [`SECURE_CONTENT_TYPE_NOSNIFF`](settings.md#std-setting-SECURE_CONTENT_TYPE_NOSNIFF), [`SECURE_REFERRER_POLICY", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "Core system checks", "Security"], "order": 18, "level": 3, "tokens": 197, "code_languages": [], "links_out": [], "id": "19abd4d8c5dc02b9", "char_count": 1403}
{"content": "TTP to HTTPS redirection in a load\nbalancer, it\u2019d be irritating to be constantly warned about not having enabled\n[`SECURE_SSL_REDIRECT`](settings.md#std-setting-SECURE_SSL_REDIRECT). Use [`SILENCED_SYSTEM_CHECKS`](settings.md#std-setting-SILENCED_SYSTEM_CHECKS) to\nsilence unneeded checks.\n\nThe following checks are run if you use the [`check --deploy`](django-admin.md#cmdoption-check-deploy) option:\n\n- **security.W001**: You do not have\n  [`django.middleware.security.SecurityMiddleware`](middleware.md#django.middleware.security.SecurityMiddleware) in your\n  [`MIDDLEWARE`](settings.md#std-setting-MIDDLEWARE) so the [`SECURE_HSTS_SECONDS`](settings.md#std-setting-SECURE_HSTS_SECONDS),\n  [`SECURE_CONTENT_TYPE_NOSNIFF`](settings.md#std-setting-SECURE_CONTENT_TYPE_NOSNIFF), [`SECURE_REFERRER_POLICY`](settings.md#std-setting-SECURE_REFERRER_POLICY),\n  [`SECURE_CROSS_ORIGIN_OPENER_POLICY`](settings.md#std-setting-SECURE_CROSS_ORIGIN_OPENER_POLICY), and\n  [`SECURE_SSL_REDIRECT`](settings.md#std-setting-SECURE_SSL_REDIRECT) settings will have no effect.\n- **security.W002**: You do not have\n  [`django.middleware.clickjacking.XFrameOptionsMiddleware`](middleware.md#django.middleware.clickjacking.XFrameOptionsMiddleware) in your\n  [`MIDDLEWARE`](settings.md#std-setting-MIDDLEWARE), so your pages will not be served with an\n  `'x-frame-options'` header. Unless there is a good reason for your\n  site to be served in a frame, you should consider enabling this\n  header to help prevent clickjacking attacks.\n- **security.W003**: You don\u2019t appear to be using Django\u2019s built-in cross-site\n  request forgery protection via the middleware\n  ([`django.middleware.csrf.CsrfViewMiddleware`](middleware.md#django.middleware.csrf.CsrfViewMiddleware) is not in your\n  [`MIDDLEWARE`](settings.md#std-setting-MIDDLEWARE)). Enabling the middleware is the safest\n  approach to ensure you don\u2019t leave any holes.\n- **security.W004**: You have not set a value for the\n  [`SECURE_HSTS_SECONDS`](settings.md#std-setting-SECURE_HSTS_SECONDS) setting. If your entire site is served only\n  over SSL, you may want to consider setting a value and enabling [HTTP\n  Strict Transport Security](middleware.md#http-strict-transport-security). Be sure to read\n  the documentation first; enabling HSTS carelessly can cause serious,\n  irreversible problems.\n- **security.W005**: You have not set the\n  [`SECURE_HSTS_INCLUDE_SUBDOMAINS`](settings.md#std-setting-SECURE_HSTS_INCLUDE_SUBDOMAINS) setting to `True`. Without this,\n  your site is potentially vulnerable to attack via an insecure connection to a\n  subdomain. Only set this to `True` if you are certain that all subdomains of\n  your domain should be served exclusively via SSL.\n- **security.W006**: Your [`SECURE_CONTENT_TYPE_NOSNIFF`](settings.md#std-setting-SECURE_CONTENT_TYPE_NOSNIFF) setting is not\n  set to `True`, so your pages will not be served with an\n  `'X-Content-Type-Options: nosniff'` header. You should consider enabling\n  this header to prevent the browser from identifying content types incorrectly.\n- **security.W007**: Your `SECURE_BROWSER_XSS_FILTER` setting is not\n  set to `True`, so your pages will not be served with an\n  `'X-XSS-Protection: 1; mode=block'` header. You should consider enabling\n  this header to activate the browser\u2019s XSS filtering and help prevent XSS\n  attacks. *This check is removed in Django 3.0 as the* `X-XSS-Protection`\n  *header is no longer honored by modern browsers.*\n- **security.W008**: Your [`SECURE_SSL_REDIRECT`](settings.md#std-setting-SECURE_SSL_REDIRECT) setting is not set to\n  `True`. Unless your site should be available over both SSL and non-SSL\n  connections, you may want to either set this setting to `True` or configure\n  a load balancer or reverse-proxy server to redirect all connections to HTTPS.\n- **security.W009**: Your [`SECRET_KEY`](settings.md#std-setting-SECRET_KEY) has less than 50 characters,\n  less than 5 unique characters, or it\u2019s prefixed with `'django-insecure-'`\n  indicating that it was generated automatically by Django. Please generate a\n  long and random value, otherwise many of Django\u2019s security-critical features\n  will be vulnerable to attack.\n- **security.W010**: You have [`django.contrib.sessions`](../topics/http/sessions.md#module-django.contrib.sessions) in your\n  [`INSTALLED_APPS`](settings.md#std-setting-INSTALLED_APPS) but you have not set\n  [`SESSION_COOKIE_SECURE`](settings.md#std-setting-SESSION_COOKIE_SECURE) to `True`. Using a secure-only session\n  cookie makes it more difficult for network traffic sniffers to hijack user\n  sessions.\n- **security.W011**: You have\n  [`django.contrib.sessions.middleware.SessionMiddleware`](middleware.md#django.contrib.sessions.middleware.SessionMiddleware) in your\n  [`MIDDLEWARE`](settings.md#std-setting-MIDDLEWARE), but you have not set [`SESSION_COOKIE_SECURE`](settings.md#std-setting-SESSION_COOKIE_SECURE)\n  to `True`. Using a secure-only session cookie makes it more difficult for\n  network traffic sniffers to hijack user sessions.\n- **security.W012**: [`SESSION_COOKIE_SECURE`](settings.md#std-setting-SESSION_COOKIE_SECURE) is not set to `True`.\n  Using a secure-only session cookie makes it more difficult for network traffic\n  sniffers to hijack user sessions.\n- **security.W013**: You have [`django.contrib.sessions`](../topics/http/sessions.md#module-django.contrib.sessions) in your\n  [`INSTALLED_APPS`](settings.md#std-setting-INSTALLED_APPS), but you have not set\n  [`SESSION_COOKIE_HTTPONLY`](settings.md#std-setting-SESSION_COOKIE_HTTPONLY) to `True`. Using an `HttpOnly` session\n  cookie makes it more difficult for cross-site scripting attacks to hijack user\n  sessions.\n- **security.W014**: You have\n  [`django.contrib.sessions.middleware.SessionMiddleware`](middleware.md#django.contrib.sessions.middleware.SessionMiddleware) in your\n  [`MIDDLEWARE`](settings.md#std-setting-MIDDLEWARE), but you have not set [`SESSION_COOKIE_HTTPONLY`](settings.md#std-setting-SESSION_COOKIE_HTTPONLY)\n  to `True`. Using an `HttpOnly` session cookie makes it more difficult for\n  cross-site scripting attacks to hijack user sessions.\n- **security.W015**: [`SESSION_COOKIE_HTTPONLY`](settings.md#std-setting-SESSION_COOKIE_HTTPONLY) is not set to `True`.\n  Using an `HttpOnly` session cookie makes it more difficult for cross-site\n  scripting attacks to hijack user sessions.\n- **security.W016**: [`CSRF_COOKIE_SECURE`](settings.md#std-setting-CSRF_COOKIE_SECURE) is not set to `True`.\n  Using a secure-only CSRF cookie makes it more difficult for network traffic\n  sniffers to steal the CSRF token.\n- **security.W017**: [`CSRF_COOKIE_HTTPONLY`](settings.md#std-setting-CSRF_COOKIE_HTTPONLY) is not set to `True`.\n  Using an `HttpOnly` CSRF cookie makes it more difficult for cross-site\n  scripting attacks to steal the CSRF token. *This check is removed in Django\n  1.11 as the* [`CSRF_COOKIE_HTTPONLY`](settings.md#std-setting-CSRF_COOKIE_HTTPONLY) *setting offers no practical\n  benefit.*\n- **security.W018**: You should not have [`DEBUG`](settings.md#std-setting-DEBUG) set to `True` in\n  deployment.\n- **security.W019**: You have\n  [`django.middleware.clickjacking.XFrameOptionsMiddleware`](middleware.md#django.middleware.clickjacking.XFrameOptionsMiddleware) in your\n  [`MIDDLEWARE`](settings.md#std-setting-MIDDLEWARE), but [`X_FRAME_OPTIONS`](settings.md#std-setting-X_FRAME_OPTIONS) is not set to\n  `'DENY'`. Unless there is a good reason for your site to serve other parts\n  of itself in a frame, you should change it to `'DENY'`.\n- **security.W020**: [`ALLOWED_HOSTS`](settings.md#std-setting-ALLOWED_HOSTS) must not be empty in deployment.\n- **security.W021**: You have not set the\n  [`SECURE_HSTS_PRELOAD`](settings.md#std-setting-SECURE_HSTS_PRELOAD) setting to `True`. Without this, your site\n  cannot be submitted to the browser preload list.\n- **security.W022**: You have not set the [`SECURE_REFERRER_POLICY`](settings.md#std-setting-SECURE_REFERRER_POLICY)\n  setting. Without this, your site will not send a Referrer-Policy header. You\n  should consider enabling this header to protect user privacy.\n- **security.E023**: You have set the [`SECURE_REFERRER_POLICY`](settings.md#std-setting-SECURE_REFERRER_POLICY) setting\n  to an invalid value.\n- **security.E024**: You have set the\n  [`SECURE_CROSS_ORIGIN_OPENER_POLICY`](settings.md#std-setting-SECURE_CROSS_ORIGIN_OPENER_POLICY) setting to an invalid value.\n- **security.W025**: Your\n  [`SECRET_KEY_FALLBACKS[n]`](settings.md#std-setting-SECRET_KEY_FALLBACKS) has less than 50\n  characters, less than 5 unique characters, or it\u2019s prefixed with\n  `'django-insecure-'` indicating that it was generated automatically by\n  Django. Please generate a long and random value, otherwise many of Django\u2019s\n  security-critical features will be vulnerable to attack.\n\nThe following checks verify that your security-related settings are correctly\nconfigured:\n\n- **security.E100**: `DEFAULT_HASHING_ALGORITHM` must be `'sha1'` or\n  `'sha256'`. *This check appeared in Django 3.1 and 3.2*.\n- **security.E101**: The CSRF failure view `'path.to.view'` does not take the\n  correct number of arguments.\n- **security.E102**: The CSRF failure view `'path.to.view'` could not be", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "Core system checks", "Security"], "order": 19, "level": 3, "tokens": 2103, "code_languages": [], "links_out": [], "id": "fd2d078a5db78168", "char_count": 9217}
{"content": "lue.\n- **security.W025**: Your\n  [`SECRET_KEY_FALLBACKS[n]`](settings.md#std-setting-SECRET_KEY_FALLBACKS) has less than 50\n  characters, less than 5 unique characters, or it\u2019s prefixed with\n  `'django-insecure-'` indicating that it was generated automatically by\n  Django. Please generate a long and random value, otherwise many of Django\u2019s\n  security-critical features will be vulnerable to attack.\n\nThe following checks verify that your security-related settings are correctly\nconfigured:\n\n- **security.E100**: `DEFAULT_HASHING_ALGORITHM` must be `'sha1'` or\n  `'sha256'`. *This check appeared in Django 3.1 and 3.2*.\n- **security.E101**: The CSRF failure view `'path.to.view'` does not take the\n  correct number of arguments.\n- **security.E102**: The CSRF failure view `'path.to.view'` could not be\n  imported.\n\n### Signals\n\n- **signals.E001**: `<handler>` was connected to the `<signal>` signal with\n  a lazy reference to the sender `<app label>.<model>`, but app `<app label>`\n  isn\u2019t installed or doesn\u2019t provide model `<model>`.", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "Core system checks", "Security"], "order": 20, "level": 3, "tokens": 103, "code_languages": [], "links_out": [], "id": "639c181061eaa839", "char_count": 1036}
{"content": "g checks verify that your security-related settings are correctly\nconfigured:\n\n- **security.E100**: `DEFAULT_HASHING_ALGORITHM` must be `'sha1'` or\n  `'sha256'`. *This check appeared in Django 3.1 and 3.2*.\n- **security.E101**: The CSRF failure view `'path.to.view'` does not take the\n  correct number of arguments.\n- **security.E102**: The CSRF failure view `'path.to.view'` could not be\n  imported.\n\n### Signals\n\n- **signals.E001**: `<handler>` was connected to the `<signal>` signal with\n  a lazy reference to the sender `<app label>.<model>`, but app `<app label>`\n  isn\u2019t installed or doesn\u2019t provide model `<model>`.\n\n### Templates\n\nThe following checks verify that your [`TEMPLATES`](settings.md#std-setting-TEMPLATES) setting is correctly\nconfigured:\n\n- **templates.E001**: You have `'APP_DIRS': True` in your\n  [`TEMPLATES`](settings.md#std-setting-TEMPLATES) but also specify `'loaders'` in `OPTIONS`. Either\n  remove `APP_DIRS` or remove the `'loaders'` option. *This check is\n  removed in Django 5.1 as system ch", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "Core system checks", "Signals"], "order": 21, "level": 3, "tokens": 55, "code_languages": [], "links_out": [], "id": "706c92d8a48646fb", "char_count": 1024}
{"content": "### Signals\n\n- **signals.E001**: `<handler>` was connected to the `<signal>` signal with\n  a lazy reference to the sender `<app label>.<model>`, but app `<app label>`\n  isn\u2019t installed or doesn\u2019t provide model `<model>`.\n\n### Templates\n\nThe following checks verify that your [`TEMPLATES`](settings.md#std-setting-TEMPLATES) setting is correctly\nconfigured:\n\n- **templates.E001**: You have `'APP_DIRS': True` in your\n  [`TEMPLATES`](settings.md#std-setting-TEMPLATES) but also specify `'loaders'` in `OPTIONS`. Either\n  remove `APP_DIRS` or remove the `'loaders'` option. *This check is\n  removed in Django 5.1 as system checks may now raise*\n  `ImproperlyConfigured` *instead.*\n- **templates.E002**: `string_if_invalid` in [`TEMPLATES`](settings.md#std-setting-TEMPLATES)\n  [`OPTIONS`](settings.md#std-setting-TEMPLATES-OPTIONS) must be a string but got: `{value}`\n  (`{type}`).\n- **templates.E003**:`<name>` is used for multiple template tag modules:\n  `<module list>`. *This check was changed to* `templates.W003` *in Django\n  4.1.2*.\n- **templates.W003**:`<name>` is used for multiple template tag modules:\n  `<module list>`.\n\n### Translation\n\nThe following checks are performed on your translation configuration:\n\n- **translation.E001**: You have provided an invalid value for the\n  [`LANGUAGE_CODE`](settings.md#std-setting-LANGUAGE_CODE) setting: `<value>`.\n- **translation.E002**: You have provided an invalid language code in the\n  [`LANGUAGES`](settings.md#std-setting-LANGUAGES) setting: `<value>`.\n- **translation.E003*", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "Core system checks", "Templates"], "order": 22, "level": 3, "tokens": 226, "code_languages": [], "links_out": [{"text": "`TEMPLATES`", "href": "settings.md#std-setting-TEMPLATES"}, {"text": "`TEMPLATES`", "href": "settings.md#std-setting-TEMPLATES"}, {"text": "`TEMPLATES`", "href": "settings.md#std-setting-TEMPLATES"}, {"text": "`OPTIONS`", "href": "settings.md#std-setting-TEMPLATES-OPTIONS"}], "id": "9f68cb04679cdeea", "char_count": 1530}
{"content": "PLATES`](settings.md#std-setting-TEMPLATES)\n  [`OPTIONS`](settings.md#std-setting-TEMPLATES-OPTIONS) must be a string but got: `{value}`\n  (`{type}`).\n- **templates.E003**:`<name>` is used for multiple template tag modules:\n  `<module list>`. *This check was changed to* `templates.W003` *in Django\n  4.1.2*.\n- **templates.W003**:`<name>` is used for multiple template tag modules:\n  `<module list>`.\n\n### Translation\n\nThe following checks are performed on your translation configuration:\n\n- **translation.E001**: You have provided an invalid value for the\n  [`LANGUAGE_CODE`](settings.md#std-setting-LANGUAGE_CODE) setting: `<value>`.\n- **translation.E002**: You have provided an invalid language code in the\n  [`LANGUAGES`](settings.md#std-setting-LANGUAGES) setting: `<value>`.\n- **translation.E003**: You have provided an invalid language code in the\n  [`LANGUAGES_BIDI`](settings.md#std-setting-LANGUAGES_BIDI) setting: `<value>`.\n- **translation.E004**: You have provided a value for the\n  [`LANGUAGE_CODE`](settings.md#std-setting-LANGUAGE_CODE) setting that is not in the [`LANGUAGES`](settings.md#std-setting-LANGUAGES)\n  setting.\n\n### URLs\n\nThe following checks are performed on your URL configuration:\n\n- **urls.W001**: Your URL pattern `<pattern>` uses\n  [`include()`](urls.md#django.urls.include) with a `route` ending with a `$`. Remove the\n  dollar from the `route` to avoid problems including URLs.\n- **urls.W002**: Your URL pattern `<pattern>` has a `route` beginning with\n  a `/`. Remove this slash as it is unnecessary. If", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "Core system checks", "Translation"], "order": 23, "level": 3, "tokens": 184, "code_languages": [], "links_out": [{"text": "`LANGUAGE_CODE`", "href": "settings.md#std-setting-LANGUAGE_CODE"}, {"text": "`LANGUAGES`", "href": "settings.md#std-setting-LANGUAGES"}, {"text": "`LANGUAGES_BIDI`", "href": "settings.md#std-setting-LANGUAGES_BIDI"}, {"text": "`LANGUAGE_CODE`", "href": "settings.md#std-setting-LANGUAGE_CODE"}, {"text": "`LANGUAGES`", "href": "settings.md#std-setting-LANGUAGES"}], "id": "bada77835d0777fe", "char_count": 1541}
{"content": "td-setting-LANGUAGES) setting: `<value>`.\n- **translation.E003**: You have provided an invalid language code in the\n  [`LANGUAGES_BIDI`](settings.md#std-setting-LANGUAGES_BIDI) setting: `<value>`.\n- **translation.E004**: You have provided a value for the\n  [`LANGUAGE_CODE`](settings.md#std-setting-LANGUAGE_CODE) setting that is not in the [`LANGUAGES`](settings.md#std-setting-LANGUAGES)\n  setting.\n\n### URLs\n\nThe following checks are performed on your URL configuration:\n\n- **urls.W001**: Your URL pattern `<pattern>` uses\n  [`include()`](urls.md#django.urls.include) with a `route` ending with a `$`. Remove the\n  dollar from the `route` to avoid problems including URLs.\n- **urls.W002**: Your URL pattern `<pattern>` has a `route` beginning with\n  a `/`. Remove this slash as it is unnecessary. If this pattern is targeted\n  in an [`include()`](urls.md#django.urls.include), ensure the [`include()`](urls.md#django.urls.include)\n  pattern has a trailing `/`.\n- **urls.W003**: Your URL pattern `<pattern>` has a `name`\n  including a `:`. Remove the colon, to avoid ambiguous namespace\n  references.\n- **urls.E004**: Your URL pattern `<pattern>` is invalid. Ensure that\n  `urlpatterns` is a list of [`path()`](urls.md#django.urls.path) and/or\n  [`re_path()`](urls.md#django.urls.re_path) instances.\n- **urls.W005**: URL namespace `<namespace>` isn\u2019t unique. You may not be\n  able to reverse all URLs in this namespace.\n- **urls.E006**: The [`MEDIA_URL`](settings.md#std-setting-MEDIA_URL)/ [`STATIC_URL`](settings.md#std-setting-STATIC_URL) setting must\n  end with a slash.\n- **urls.E007**: The custom `handlerXXX` view `'path.to.view'` does not\n  take the correct number of arguments (\u2026).\n- **urls.E008**: The custom `handlerXXX` view `'path.to.view'` could not be\n  imported.\n- **urls.E009**: Your URL pattern `<pattern>` has an invalid view, pass\n  `<view>.as_view()` instead of `<view>`.\n- **urls.W010**: Your URL pattern `<pattern>` has an unmatched\n  `<angle bracket>`.\n\n## `contrib` app checks", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "Core system checks", "URLs"], "order": 24, "level": 3, "tokens": 394, "code_languages": [], "links_out": [{"text": "`include()`", "href": "urls.md#django.urls.include"}, {"text": "`include()`", "href": "urls.md#django.urls.include"}, {"text": "`include()`", "href": "urls.md#django.urls.include"}, {"text": "`path()`", "href": "urls.md#django.urls.path"}, {"text": "`re_path()`", "href": "urls.md#django.urls.re_path"}, {"text": "`MEDIA_URL`", "href": "settings.md#std-setting-MEDIA_URL"}, {"text": "`STATIC_URL`", "href": "settings.md#std-setting-STATIC_URL"}], "id": "17abdd4fa4b97399", "char_count": 2003}
{"content": " **urls.E007**: The custom `handlerXXX` view `'path.to.view'` does not\n  take the correct number of arguments (\u2026).\n- **urls.E008**: The custom `handlerXXX` view `'path.to.view'` could not be\n  imported.\n- **urls.E009**: Your URL pattern `<pattern>` has an invalid view, pass\n  `<view>.as_view()` instead of `<view>`.\n- **urls.W010**: Your URL pattern `<pattern>` has an unmatched\n  `<angle bracket>`.\n\n## `contrib` app checks\n\n### `admin`\n\nAdmin checks are all performed as part of the `admin` tag.\n\nThe following checks are performed on any\n[`ModelAdmin`](contrib/admin/index.md#django.contrib.admin.ModelAdmin) (or subclass) that is registered\nwith the admin site:\n\n- **admin.E001**: The value of `raw_id_fields` must be a list or tuple.\n- **admin.E002**: The value of `raw_id_fields[n]` refers to `<field name>`,\n  which is ", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "`contrib` app checks"], "order": 25, "level": 2, "tokens": 5, "code_languages": [], "links_out": [], "id": "d0c9b5bcb24baba9", "char_count": 827}
{"content": "## `contrib` app checks\n\n### `admin`\n\nAdmin checks are all performed as part of the `admin` tag.\n\nThe following checks are performed on any\n[`ModelAdmin`](contrib/admin/index.md#django.contrib.admin.ModelAdmin) (or subclass) that is registered\nwith the admin site:\n\n- **admin.E001**: The value of `raw_id_fields` must be a list or tuple.\n- **admin.E002**: The value of `raw_id_fields[n]` refers to `<field name>`,\n  which is not a field of `<model>`.\n- **admin.E003**: The value of `raw_id_fields[n]` must be a foreign key or\n  a many-to-many field.\n- **admin.E004**: The value of `fields` must be a list or tuple.\n- **admin.E005**: Both `fieldsets` and `fields` are specified.\n- **admin.E006**: The value of `fields` contains duplicate field(s).\n- **admin.E007**: The value of `fieldsets` must be a list or tuple.\n- **admin.E008**: The value of `fieldsets[n]` must be a list or tuple.\n- **admin.E009**: The value of `fieldsets[n]` must be of length 2.\n- **admin.E010**: The value of `fieldsets[n][1]` must be a dictionary.\n- **admin.E011**: The value of `fieldsets[n][1]` must contain the key\n  `fields`.\n- **admin.E012**: There are duplicate field(s) in `fieldsets[n][1]`.\n- **admin.E013**: The value of\n  `fields[n]/filter_horizontal[n]/filter_vertical[n]/fieldsets[n][m]` cannot\n  include the `ManyToManyField` `<field name>`, because that field manually\n  specifies a relationship model.\n- **admin.E014**: The value of `exclude` must be a list or tuple.\n- **admin.E015**: The value of `exclude` contains duplicate field(s).\n- **admin.E016**: The value of `form` must inherit from `BaseModelForm`.\n- **admin.E017**: The value of `filter_vertical` must be a list or tuple.\n- **admin.E018**: The value of `filter_horizontal` must be a list or tuple.\n- **admin.E019**: The value of `filter_vertical[n]/filter_horizontal[n]`\n  refers to `<field name>`, which is not a field of `<model>`.\n- **admin.E020**: The value of `filter_vertical[n]/filter_horizontal[n]`\n  must be a many-to-many field.\n- **admin.E021**: The value of `radio_fields` must be a dictionary.\n- **admin.E022**: The value of `radio_fields` refers to `<field name>`,\n  which is not a field of `<model>`.\n- **admin.E023**: The value of `radio_fields` refers to `<field name>`,\n  which is not an instance of `ForeignKey`, and does not have a `choices`\n  definition.\n- **admin.E024**: The value of `radio_fields[<field name>]` must be either\n  `admin.HORIZONTAL` or `admin.VERTICAL`.\n- **admin.E025**: The value of `view_on_site` must be either a callable or a\n  boolean value.\n- **admin.E026**: The value of `prepopulated_fields` must be a dictionary.\n- **admin.E027**: The value of `prepopulated_fields` refers to\n  `<field name>`, which is not a field of `<model>`.\n- **admin.E028**: The value of `prepopulated_fields` refers to\n  `<field name>`, which must not be a `DateTimeField`, a `ForeignKey`,\n  a `OneToOneField`, or a `ManyToManyField` field.\n- **admin.E029**: The value of `prepopulated_fields[<field name>]` must be a\n  list or tuple.\n- **admin.E030**: The value of `prepopulated_fields` refers to\n  `<field name>`, which is not a field of `<model>`.\n- **admin.E031**: The value of `ordering` must be a list or tuple.\n- **admin.E032**: The value of `ordering` has the random ordering marker\n  `?`, but contains other fields as well.\n- **admin.E033**: The value of `ordering` refers to `<field name>`, which\n  is not a field of `<model>`.\n- **admin.E034**: The value of `readonly_fields` must be a list or tuple.\n- **admin.E035**: The value of `readonly_fields[n]` refers to\n  `<field_name>`, which is not a callable, an attribute of\n  `<ModelAdmin class>`, or an attribute of `<model>`.\n- **admin.E036**: The value of `autocomplete_fields` must be a list or tuple.\n- **admin.E037**: The value of `autocomplete_fields[n]` refers to\n  `<field name>`, which is not a field of `<model>`.\n- **admin.E038**: The value of `autocomplete_fields[n]` must be a foreign\n  key or a many-to-many field.\n- **admin.E039**: An admin for model `<model>` has to be registered to be\n  referenced by `<modeladmin>.autocomplete_fields`.\n- **admin.E040**: `<modeladmin>` must define `search_fields`, because\n  it\u2019s referenced by `<other_modeladmin>.autocomplete_fields`.\n\n#### `ModelAdmin`\n\nThe following checks are performed on any\n[`ModelAdmin`](contrib/admin/index.md#django.contrib.admin.ModelAdmin) that is registered\nwith the admin site:\n\n- **admin.E101**: The value of `save_as` must be a boolean.\n- **admin.E102**: The value of `save_on_top` must be a boolean.\n- **admin.E103**: The value of `inlines` must be a list or tuple.\n- **admin.E104**: `<InlineModelAdmin ", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "`contrib` app checks", "`admin`"], "order": 26, "level": 3, "tokens": 1049, "code_languages": [], "links_out": [{"text": "`ModelAdmin`", "href": "contrib/admin/index.md#django.contrib.admin.ModelAdmin"}], "id": "d994452f89654936", "char_count": 4625}
{"content": ", which is not a field of `<model>`.\n- **admin.E038**: The value of `autocomplete_fields[n]` must be a foreign\n  key or a many-to-many field.\n- **admin.E039**: An admin for model `<model>` has to be registered to be\n  referenced by `<modeladmin>.autocomplete_fields`.\n- **admin.E040**: `<modeladmin>` must define `search_fields`, because\n  it\u2019s referenced by `<other_modeladmin>.autocomplete_fields`.\n\n#### `ModelAdmin`\n\nThe following checks are performed on any\n[`ModelAdmin`](contrib/admin/index.md#django.contrib.admin.ModelAdmin) that is registered\nwith the admin site:\n\n- **admin.E101**: The value of `save_as` must be a boolean.\n- **admin.E102**: The value of `save_on_top` must be a boolean.\n- **admin.E103**: The value of `inlines` must be a list or tuple.\n- **admin.E104**: `<InlineModelAdmin class>` must inherit from\n  `InlineModelAdmin`.\n- **admin.E105**: `<InlineModelAdmin class>` must have a `model` attribute.\n- **admin.E106**: The value of `<InlineModelAdmin class>.model` must be a\n  `Model`.\n- **admin.E107**: The value of `list_display` must be a list or tuple.\n- **admin.E108**: The value of `list_display[n]` refers to `<label>`, which\n  is not a callable or attribute of `<ModelAdmin class>`, or an attribute,\n  method, or field on `<model>`.\n- **admin.E109**: The value of `list_display[n]` must not be a many-to-many\n  field or a reverse foreign key.\n- **admin.E110**: The value of `list_display_links` must be a list, a tuple,\n  or `None`.\n- **admin.E111**: The value of `list_display_links[n]` refers to `<label>`,\n  which is not defined in `list_display`.\n- **admin.E112**: The value of `list_filter` must be a list or tuple.\n- **admin.E113**: The value of `list_filter[n]` must inherit from\n  `ListFilter`.\n- **admin.E114**: The value of `list_filter[n]` must not inherit from\n  `FieldListFilter`.\n- **admin.E115**: The value of `list_filter[n][1]` must inherit from\n  `FieldListFilter`.\n- **admin.E116**: The value of `list_filter[n]` refers to `<label>`,\n  which does not refer to a Field.\n- **admin.E117**: The value of `list_select_related` must be a boolean,\n  tuple or list.\n- **admin.E118**: The value of `list_per_page` must be an integer.\n- **admin.E119**: The value of `list_max_show_all` must be an integer.\n- **admin.E120**: The value of `list_editable` must be a list or tuple.\n- **admin.E121**: The value of `list_editable[n]` refers to `<label>`,\n  which is not a field of `<model>`.\n- **admin.E122**: The value of `list_editable[n]` refers to `<label>`,\n  which is not contained in `list_display`.\n- **admin.E123**: The value of `list_editable[n]` cannot be in both\n  `list_editable` and `list_display_links`.\n- **admin.E124**: The value of `list_editable[n]` refers to the first field\n  in `list_display` (`<label>`), which cannot be used unless\n  `list_display_links` is set.\n- **admin.E125**: The value of `list_editable[n]` refers to `<field name>`,\n  which is not editable through the admin.\n- **admin.E126**: The value of `search_fields` must be a list or tuple.\n- **admin.E127**: The value of `date_hierarchy` refers to `<field name>`,\n  which does not refer to a Field.\n- **admin.E128**: The value of `date_hierarchy` must be a `DateField` or\n  `DateTimeField`.\n- **admin.E129**: `<modeladmin>` must define a `has_<foo>_permission()`\n  method for the `<action>` action.\n- **admin.E130**: `__name__` attributes of actions defined in\n  `<modeladmin>` must be unique. Name `<name>` is not unique.\n\n#### `InlineModelAdmin`\n\nThe following checks are performed on any\n[`InlineModelAdmin`](contrib/admin/index.md#django.contrib.admin.InlineModelAdmin) that is registered as an\ninline on a [`ModelAdmin`](contrib/admin/index.md#django.contrib.admin.ModelAdmin).\n\n- **admin.E201**: Cannot exclude the field `<field name>`, because it is the\n  foreign key to the parent model `<app_label>.<model>`.\n- **adm", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "`contrib` app checks", "`admin`", "`ModelAdmin`"], "order": 27, "level": 4, "tokens": 761, "code_languages": [], "links_out": [{"text": "`ModelAdmin`", "href": "contrib/admin/index.md#django.contrib.admin.ModelAdmin"}], "id": "d117363ff5a13d2f", "char_count": 3849}
{"content": "date_hierarchy` refers to `<field name>`,\n  which does not refer to a Field.\n- **admin.E128**: The value of `date_hierarchy` must be a `DateField` or\n  `DateTimeField`.\n- **admin.E129**: `<modeladmin>` must define a `has_<foo>_permission()`\n  method for the `<action>` action.\n- **admin.E130**: `__name__` attributes of actions defined in\n  `<modeladmin>` must be unique. Name `<name>` is not unique.\n\n#### `InlineModelAdmin`\n\nThe following checks are performed on any\n[`InlineModelAdmin`](contrib/admin/index.md#django.contrib.admin.InlineModelAdmin) that is registered as an\ninline on a [`ModelAdmin`](contrib/admin/index.md#django.contrib.admin.ModelAdmin).\n\n- **admin.E201**: Cannot exclude the field `<field name>`, because it is the\n  foreign key to the parent model `<app_label>.<model>`.\n- **admin.E202**: `<model>` has no `ForeignKey` to `<parent model>`./\n  `<model>` has more than one `ForeignKey` to `<parent model>`. You must\n  specify a `fk_name` attribute.\n- **admin.E203**: The value of `extra` must be an integer.\n- **admin.E204**: The value of `max_num` must be an integer.\n- **admin.E205**: The value of `min_num` must be an integer.\n- **admin.E206**: The value of `formset` must inherit from\n  `BaseModelFormSet`.\n\n#### `GenericInlineModelAdmin`\n\nThe following checks are performed on any\n[`GenericInlineModelAdmin`](contrib/contenttypes.md#django.contrib.contenttypes.admin.GenericInlineModelAdmin) that is\nregistered as an inline on a [`ModelAdmin`](contrib/admin/index.md#django.contrib.admin.ModelAdmin).\n\n- **admin.E301**: `<model>` has no `GenericForeignKey`.\n- **admin.E302**: `'ct_field'` references `<label>", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "`contrib` app checks", "`admin`", "`InlineModelAdmin`"], "order": 28, "level": 4, "tokens": 207, "code_languages": [], "links_out": [{"text": "`InlineModelAdmin`", "href": "contrib/admin/index.md#django.contrib.admin.InlineModelAdmin"}, {"text": "`ModelAdmin`", "href": "contrib/admin/index.md#django.contrib.admin.ModelAdmin"}], "id": "0678589d462773ad", "char_count": 1636}
{"content": "ForeignKey` to `<parent model>`./\n  `<model>` has more than one `ForeignKey` to `<parent model>`. You must\n  specify a `fk_name` attribute.\n- **admin.E203**: The value of `extra` must be an integer.\n- **admin.E204**: The value of `max_num` must be an integer.\n- **admin.E205**: The value of `min_num` must be an integer.\n- **admin.E206**: The value of `formset` must inherit from\n  `BaseModelFormSet`.\n\n#### `GenericInlineModelAdmin`\n\nThe following checks are performed on any\n[`GenericInlineModelAdmin`](contrib/contenttypes.md#django.contrib.contenttypes.admin.GenericInlineModelAdmin) that is\nregistered as an inline on a [`ModelAdmin`](contrib/admin/index.md#django.contrib.admin.ModelAdmin).\n\n- **admin.E301**: `<model>` has no `GenericForeignKey`.\n- **admin.E302**: `'ct_field'` references `<label>`, which is not a field\n  on `<model>`.\n- **admin.E303**: `'ct_fk_field'` references `<label>`, which is not a\n  field on `<model>`.\n- **admin.E304**: `<model>` has no `GenericForeignKey` using content type\n  field `<field name>` and object ID field `<field name>`.\n\n#### `AdminSite`\n\nThe following checks are performed on the default\n[`AdminSite`](contrib/admin/index.md#django.contrib.admin.AdminSite):\n\n- **admin.E401**: [`django.contrib.contenttypes`](contrib/contenttypes.md#module-django.contrib.contenttypes) must be in\n  [`INSTALLED_APPS`](settings.md#std-setting-INSTALLED_APPS) in order to use the admin application.\n- **admin.E402**: [`django.contrib.auth.", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "`contrib` app checks", "`admin`", "`GenericInlineModelAdmin`"], "order": 29, "level": 4, "tokens": 166, "code_languages": [], "links_out": [{"text": "`GenericInlineModelAdmin`", "href": "contrib/contenttypes.md#django.contrib.contenttypes.admin.GenericInlineModelAdmin"}, {"text": "`ModelAdmin`", "href": "contrib/admin/index.md#django.contrib.admin.ModelAdmin"}], "id": "4ee94c85a96f4674", "char_count": 1471}
{"content": "o.contrib.admin.ModelAdmin).\n\n- **admin.E301**: `<model>` has no `GenericForeignKey`.\n- **admin.E302**: `'ct_field'` references `<label>`, which is not a field\n  on `<model>`.\n- **admin.E303**: `'ct_fk_field'` references `<label>`, which is not a\n  field on `<model>`.\n- **admin.E304**: `<model>` has no `GenericForeignKey` using content type\n  field `<field name>` and object ID field `<field name>`.\n\n#### `AdminSite`\n\nThe following checks are performed on the default\n[`AdminSite`](contrib/admin/index.md#django.contrib.admin.AdminSite):\n\n- **admin.E401**: [`django.contrib.contenttypes`](contrib/contenttypes.md#module-django.contrib.contenttypes) must be in\n  [`INSTALLED_APPS`](settings.md#std-setting-INSTALLED_APPS) in order to use the admin application.\n- **admin.E402**: [`django.contrib.auth.context_processors.auth`](templates/api.md#django.contrib.auth.context_processors.auth)\n  must be enabled in [`DjangoTemplates`](../topics/templates.md#django.template.backends.django.DjangoTemplates)\n  ([`TEMPLATES`](settings.md#std-setting-TEMPLATES)) if using the default auth backend in order to use the\n  admin application.\n- **admin.E403**: A [`django.template.backends.django.DjangoTemplates`](../topics/templates.md#django.template.backends.django.DjangoTemplates)\n  instance must be configured in [`TEMPLATES`](settings.md#std-setting-TEMPLATES) in order to use the\n  admin application.\n- **admin.E404**: `django.contrib.messages.context_processors.messages`\n  must be enabled in [`DjangoTemplates`](../topics/templates.md#django.template.backends.django.DjangoTemplates)\n  ([`TEMPLATES`](settings.md#std-setting-TEMPLATES)) in order to use the admin application.\n- **admin.E405**: [`django.contrib.auth`](../topics/auth/index.md#module-django.contrib.auth) must be in\n  [`INSTALLED_APPS`](settings.md#std-setting-INSTALLED_APPS) in order to use the admin application.\n- **admin.E406**: [`django.contrib.messages`](contrib/messages.md#module-django.contrib.messages) must be in\n  [`INSTALLED_APPS`](settings.md#std-setting-INSTALLED_APPS) in order to use the admin application.\n- **admin.E408**:\n  [`django.contrib.auth.middleware.AuthenticationMiddleware`](middleware.md#django.contrib.auth.middleware.AuthenticationMiddleware) must be in\n  [`MIDDLEWARE`](settings.md#std-setting-MIDDLEWARE) in order to use the admin application.\n- **admin.E409**: [`django.contrib.messages.middleware.MessageMiddleware`](middleware.md#django.contrib.messages.middleware.MessageMiddleware)\n  must be in [`MIDDLEWARE`](settings.md#std-setting-MIDDLEWARE) in order to use the admin application.\n- **admin.E410**: [`django.contrib.sessions.middleware.SessionMiddleware`](middleware.md#django.contrib.sessions.middleware.SessionMiddleware)\n  must be in [`MIDDLEWARE`](settings.md#std-setting-MIDDLEWARE) in order to use the admin application.\n- **admin.W411**: `django.template.context_processors.request` must be\n  enabled in [`DjangoTemplates`](../topics/templates.md#django.template.backends.django.DjangoTemplates)\n  ([`TEMPLATES`](settings.md#std-setting-TEMPLATES)) in order to use the admin navigation sidebar.\n\n### `auth`\n\n- **auth.E001**: `REQUIRED_FIELDS` must be a list or tuple.\n- **auth.E002**: The field named as the `USERNAME_FIELD` for a custom user\n  model must not be included in `REQUIRED_FIELDS`.\n- **auth.E003**: `<field>` must be unique because it is named as the\n  `USERNAME_FIELD`.\n- **auth.W004**: `<field>` is named as the `USERNAME_FIELD`, but it is not\n  unique.\n- **auth.E005**: The permiss", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "`contrib` app checks", "`admin`", "`AdminSite`"], "order": 30, "level": 4, "tokens": 676, "code_languages": [], "links_out": [{"text": "`AdminSite`", "href": "contrib/admin/index.md#django.contrib.admin.AdminSite"}, {"text": "`django.contrib.contenttypes`", "href": "contrib/contenttypes.md#module-django.contrib.contenttypes"}, {"text": "`INSTALLED_APPS`", "href": "settings.md#std-setting-INSTALLED_APPS"}, {"text": "`django.contrib.auth.context_processors.auth`", "href": "templates/api.md#django.contrib.auth.context_processors.auth"}, {"text": "`DjangoTemplates`", "href": "../topics/templates.md#django.template.backends.django.DjangoTemplates"}, {"text": "`TEMPLATES`", "href": "settings.md#std-setting-TEMPLATES"}, {"text": "`django.template.backends.django.DjangoTemplates`", "href": "../topics/templates.md#django.template.backends.django.DjangoTemplates"}, {"text": "`TEMPLATES`", "href": "settings.md#std-setting-TEMPLATES"}, {"text": "`DjangoTemplates`", "href": "../topics/templates.md#django.template.backends.django.DjangoTemplates"}, {"text": "`TEMPLATES`", "href": "settings.md#std-setting-TEMPLATES"}, {"text": "`django.contrib.auth`", "href": "../topics/auth/index.md#module-django.contrib.auth"}, {"text": "`INSTALLED_APPS`", "href": "settings.md#std-setting-INSTALLED_APPS"}, {"text": "`django.contrib.messages`", "href": "contrib/messages.md#module-django.contrib.messages"}, {"text": "`INSTALLED_APPS`", "href": "settings.md#std-setting-INSTALLED_APPS"}, {"text": "`django.contrib.auth.middleware.AuthenticationMiddleware`", "href": "middleware.md#django.contrib.auth.middleware.AuthenticationMiddleware"}, {"text": "`MIDDLEWARE`", "href": "settings.md#std-setting-MIDDLEWARE"}, {"text": "`django.contrib.messages.middleware.MessageMiddleware`", "href": "middleware.md#django.contrib.messages.middleware.MessageMiddleware"}, {"text": "`MIDDLEWARE`", "href": "settings.md#std-setting-MIDDLEWARE"}, {"text": "`django.contrib.sessions.middleware.SessionMiddleware`", "href": "middleware.md#django.contrib.sessions.middleware.SessionMiddleware"}, {"text": "`MIDDLEWARE`", "href": "settings.md#std-setting-MIDDLEWARE"}, {"text": "`DjangoTemplates`", "href": "../topics/templates.md#django.template.backends.django.DjangoTemplates"}, {"text": "`TEMPLATES`", "href": "settings.md#std-setting-TEMPLATES"}], "id": "9fefc1c8d24dd650", "char_count": 3512}
{"content": "are.SessionMiddleware)\n  must be in [`MIDDLEWARE`](settings.md#std-setting-MIDDLEWARE) in order to use the admin application.\n- **admin.W411**: `django.template.context_processors.request` must be\n  enabled in [`DjangoTemplates`](../topics/templates.md#django.template.backends.django.DjangoTemplates)\n  ([`TEMPLATES`](settings.md#std-setting-TEMPLATES)) in order to use the admin navigation sidebar.\n\n### `auth`\n\n- **auth.E001**: `REQUIRED_FIELDS` must be a list or tuple.\n- **auth.E002**: The field named as the `USERNAME_FIELD` for a custom user\n  model must not be included in `REQUIRED_FIELDS`.\n- **auth.E003**: `<field>` must be unique because it is named as the\n  `USERNAME_FIELD`.\n- **auth.W004**: `<field>` is named as the `USERNAME_FIELD`, but it is not\n  unique.\n- **auth.E005**: The permission codenamed `<codename>` clashes with a builtin\n  permission for model `<model>`.\n- **auth.E006**: The permission codenamed `<codename>` is duplicated for model\n  `<model>`.\n- **auth.E007**: The [`verbose_name`](models/options.md#django.db.models.Options.verbose_name) of model `<model>` must be at most\n  244 characters for its builtin permission names\n  to be at most 255 characters.\n- **auth.E008**: The permission named `<name>` of model `<model>` is longer\n  than 255 characters.\n- **auth.C009**: `<User model>.is_anonymous` must be an attribute or property\n  rather than a method. Ignoring this is a security issue as anonymous users\n  will be treated as authenticated!\n- **auth.C010**: `<User model>.is_authenticated` must be an attribute or\n  property rather than a method. Ignoring this is a security issue as anonymous\n  users will be treated as authenticated!\n- **auth.E011**: The name of model `<model>` must be at most 93 characters\n  for its builtin permission names to be at most 100 characters.\n- **auth.E012**: The permission codenamed `<codename>` of model `<model>`\n  is longer than 100 characters.\n- **auth.E013**: In order to use\n  [`django.contrib.auth.middleware.LoginRequiredMiddleware`](middleware.md#django.contrib.auth.middleware.LoginRequiredMiddleware),\n  [`django.contrib.auth.middleware.AuthenticationMiddleware`](middleware.md#django.contrib.auth.middleware.AuthenticationMiddleware) must be\n  defined before it in MIDDLEWARE.\n\n### `contenttypes`\n\nThe following checks are performed when a model contains a\n[`GenericForeignKey`](contrib/contenttypes.md#django.contrib.contenttypes.fields.GenericForeignKey) or\n[`GenericRelation`](contrib/contenttypes.md#django.contrib.contenttypes.fields.GenericRelation):\n\n- **contenttypes.E001**: The `GenericForeignKey` object ID references the\n  nonexistent field `<field>`.\n- **contenttype", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "`contrib` app checks", "`auth`"], "order": 31, "level": 3, "tokens": 465, "code_languages": [], "links_out": [{"text": "`verbose_name`", "href": "models/options.md#django.db.models.Options.verbose_name"}, {"text": "`django.contrib.auth.middleware.LoginRequiredMiddleware`", "href": "middleware.md#django.contrib.auth.middleware.LoginRequiredMiddleware"}, {"text": "`django.contrib.auth.middleware.AuthenticationMiddleware`", "href": "middleware.md#django.contrib.auth.middleware.AuthenticationMiddleware"}], "id": "fd658ef4cdeca566", "char_count": 2664}
{"content": "ename>` of model `<model>`\n  is longer than 100 characters.\n- **auth.E013**: In order to use\n  [`django.contrib.auth.middleware.LoginRequiredMiddleware`](middleware.md#django.contrib.auth.middleware.LoginRequiredMiddleware),\n  [`django.contrib.auth.middleware.AuthenticationMiddleware`](middleware.md#django.contrib.auth.middleware.AuthenticationMiddleware) must be\n  defined before it in MIDDLEWARE.\n\n### `contenttypes`\n\nThe following checks are performed when a model contains a\n[`GenericForeignKey`](contrib/contenttypes.md#django.contrib.contenttypes.fields.GenericForeignKey) or\n[`GenericRelation`](contrib/contenttypes.md#django.contrib.contenttypes.fields.GenericRelation):\n\n- **contenttypes.E001**: The `GenericForeignKey` object ID references the\n  nonexistent field `<field>`.\n- **contenttypes.E002**: The `GenericForeignKey` content type references the\n  nonexistent field `<field>`.\n- **contenttypes.E003**: `<field>` is not a `ForeignKey`.\n- **contenttypes.E004**: `<field>` is not a `ForeignKey` to\n  `contenttypes.ContentType`.\n- **contenttypes.E005**: Model names must be at most 100 characters.\n\n### `postgres`\n\nThe following checks are performed on [`django.contrib.postgres`](contrib/postgres/index.md#module-django.contrib.postgres) model\nfields:\n\n- **postgres.E001**: Base field for array has errors: \u2026\n- **postgres.E002**: Base field for array cannot be a related field.\n- **postgres.E003**: `<field>` default should be a callable instead of an\n  instance so that it\u2019s not shared between all", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "`contrib` app checks", "`contenttypes`"], "order": 32, "level": 3, "tokens": 177, "code_languages": [], "links_out": [{"text": "`GenericForeignKey`", "href": "contrib/contenttypes.md#django.contrib.contenttypes.fields.GenericForeignKey"}, {"text": "`GenericRelation`", "href": "contrib/contenttypes.md#django.contrib.contenttypes.fields.GenericRelation"}], "id": "a3328053bafc86de", "char_count": 1513}
{"content": "`GenericForeignKey` object ID references the\n  nonexistent field `<field>`.\n- **contenttypes.E002**: The `GenericForeignKey` content type references the\n  nonexistent field `<field>`.\n- **contenttypes.E003**: `<field>` is not a `ForeignKey`.\n- **contenttypes.E004**: `<field>` is not a `ForeignKey` to\n  `contenttypes.ContentType`.\n- **contenttypes.E005**: Model names must be at most 100 characters.\n\n### `postgres`\n\nThe following checks are performed on [`django.contrib.postgres`](contrib/postgres/index.md#module-django.contrib.postgres) model\nfields:\n\n- **postgres.E001**: Base field for array has errors: \u2026\n- **postgres.E002**: Base field for array cannot be a related field.\n- **postgres.E003**: `<field>` default should be a callable instead of an\n  instance so that it\u2019s not shared between all field instances. *This check was\n  changed to* `fields.E010` *in Django 3.1*.\n- **postgres.W004**: Base field for array has warnings: \u2026\n\n### `sites`\n\nThe following checks are performed on any model using a\n[`CurrentSiteManager`](contrib/sites.md#django.contrib.sites.managers.CurrentSiteManager):\n\n- **sites.E001**: `CurrentSiteManager` could not find a field named\n  `<field name>`.\n- **sites.E002**: `CurrentSiteManager` cannot use `<field>` as it is not a\n  foreign key or a many-to-many field.\n\nThe following checks verify that [`djan", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "`contrib` app checks", "`postgres`"], "order": 33, "level": 3, "tokens": 134, "code_languages": [], "links_out": [{"text": "`django.contrib.postgres`", "href": "contrib/postgres/index.md#module-django.contrib.postgres"}], "id": "f6806d5b3ec829a8", "char_count": 1341}
{"content": "es) model\nfields:\n\n- **postgres.E001**: Base field for array has errors: \u2026\n- **postgres.E002**: Base field for array cannot be a related field.\n- **postgres.E003**: `<field>` default should be a callable instead of an\n  instance so that it\u2019s not shared between all field instances. *This check was\n  changed to* `fields.E010` *in Django 3.1*.\n- **postgres.W004**: Base field for array has warnings: \u2026\n\n### `sites`\n\nThe following checks are performed on any model using a\n[`CurrentSiteManager`](contrib/sites.md#django.contrib.sites.managers.CurrentSiteManager):\n\n- **sites.E001**: `CurrentSiteManager` could not find a field named\n  `<field name>`.\n- **sites.E002**: `CurrentSiteManager` cannot use `<field>` as it is not a\n  foreign key or a many-to-many field.\n\nThe following checks verify that [`django.contrib.sites`](contrib/sites.md#module-django.contrib.sites) is correctly\nconfigured:\n\n- **sites.E101**: The [`SITE_ID`](settings.md#std-setting-SITE_ID) setting must be an integer.\n\n### `staticfiles`\n\nThe following checks verify that [`django.contrib.staticfiles`](contrib/staticfiles.md#module-django.contrib.staticfiles) is correctly\nconfigured:\n\n- **staticfiles.E001**: The [`STATICFILES_DIRS`](settings.md#std-setting-STATICFILES_DIRS) setting is not a tuple\n  or list.\n- **staticfiles.E002**: The [`STATICFILES_DIRS`](settings.md#std-setting-STATICFILES_DIRS) setting should no", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "`contrib` app checks", "`sites`"], "order": 34, "level": 3, "tokens": 146, "code_languages": [], "links_out": [{"text": "`CurrentSiteManager`", "href": "contrib/sites.md#django.contrib.sites.managers.CurrentSiteManager"}, {"text": "`django.contrib.sites`", "href": "contrib/sites.md#module-django.contrib.sites"}, {"text": "`SITE_ID`", "href": "settings.md#std-setting-SITE_ID"}], "id": "959f7382ace9e5a3", "char_count": 1390}
{"content": "ntSiteManager` could not find a field named\n  `<field name>`.\n- **sites.E002**: `CurrentSiteManager` cannot use `<field>` as it is not a\n  foreign key or a many-to-many field.\n\nThe following checks verify that [`django.contrib.sites`](contrib/sites.md#module-django.contrib.sites) is correctly\nconfigured:\n\n- **sites.E101**: The [`SITE_ID`](settings.md#std-setting-SITE_ID) setting must be an integer.\n\n### `staticfiles`\n\nThe following checks verify that [`django.contrib.staticfiles`](contrib/staticfiles.md#module-django.contrib.staticfiles) is correctly\nconfigured:\n\n- **staticfiles.E001**: The [`STATICFILES_DIRS`](settings.md#std-setting-STATICFILES_DIRS) setting is not a tuple\n  or list.\n- **staticfiles.E002**: The [`STATICFILES_DIRS`](settings.md#std-setting-STATICFILES_DIRS) setting should not\n  contain the [`STATIC_ROOT`](settings.md#std-setting-STATIC_ROOT) setting.\n- **staticfiles.E003**: The prefix `<prefix>` in the\n  [`STATICFILES_DIRS`](settings.md#std-setting-STATICFILES_DIRS) setting must not end with a slash.\n- **staticfiles.W004**: The directory `<directory>` in the\n  [`STATICFILES_DIRS`](settings.md#std-setting-STATICFILES_DIRS) does not exist.\n- **staticfiles.E005**: The [`STORAGES`](settings.md#std-setting-STORAGES) setting must define a\n  `staticfiles` storage.", "source_file_id": "django__5_2__ref__checks.html", "headings": ["System check framework", "`contrib` app checks", "`staticfiles`"], "order": 35, "level": 3, "tokens": 223, "code_languages": [], "links_out": [{"text": "`django.contrib.staticfiles`", "href": "contrib/staticfiles.md#module-django.contrib.staticfiles"}, {"text": "`STATICFILES_DIRS`", "href": "settings.md#std-setting-STATICFILES_DIRS"}, {"text": "`STATICFILES_DIRS`", "href": "settings.md#std-setting-STATICFILES_DIRS"}, {"text": "`STATIC_ROOT`", "href": "settings.md#std-setting-STATIC_ROOT"}, {"text": "`STATICFILES_DIRS`", "href": "settings.md#std-setting-STATICFILES_DIRS"}, {"text": "`STATICFILES_DIRS`", "href": "settings.md#std-setting-STATICFILES_DIRS"}, {"text": "`STORAGES`", "href": "settings.md#std-setting-STORAGES"}], "id": "c7893f7a33ae60f4", "char_count": 1295}
